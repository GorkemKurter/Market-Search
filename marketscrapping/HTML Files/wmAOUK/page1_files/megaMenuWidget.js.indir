!function(Q){var F={};function B(n){if(F[n])return F[n].exports;var e=F[n]={i:n,l:!1,exports:{}};return Q[n].call(e.exports,e,e.exports,B),e.l=!0,e.exports}B.m=Q,B.c=F,B.d=function(Q,F,n){B.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:n})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,F){if(1&F&&(Q=B(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var n=Object.create(null);if(B.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var e in Q)B.d(n,e,function(F){return Q[F]}.bind(null,e));return n},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="",B(B.s=12)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export overlayId */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getOverlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addOverlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return showOverlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return hideOverlay; });\nvar overlayId = "megamenu-overlay";\nvar getOverlay = function getOverlay() {\n  return document.getElementById(overlayId);\n};\nvar addOverlay = function addOverlay() {\n  var overlayContainer = document.getElementById("header__overlay-container") || document.body;\n  var overlay = getOverlay() || document.createElement("div");\n  overlay.id = overlayId;\n  overlay.setAttribute("class", "megamenu__overlay bg-gray-100 bottom-0 fixed left-0 right-0 top-0 z-40 pointer-events-none opacity-0");\n\n  if (!overlay.parentNode) {\n    overlayContainer.appendChild(overlay);\n  }\n};\nvar showOverlay = function showOverlay() {\n  var overlay = getOverlay();\n  overlay.classList.remove("opacity-0");\n  overlay.classList.remove("pointer-events-none");\n  overlay.classList.add("opacity-75");\n  overlay.classList.add("pointer-events-auto");\n};\nvar hideOverlay = function hideOverlay() {\n  var overlay = getOverlay();\n  overlay.classList.remove("opacity-75");\n  overlay.classList.remove("pointer-events-auto");\n  overlay.classList.add("opacity-0");\n  overlay.classList.add("pointer-events-none");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9vdmVybGF5LmpzPzNjNTAiXSwibmFtZXMiOlsib3ZlcmxheUlkIiwiZ2V0T3ZlcmxheSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRPdmVybGF5Iiwib3ZlcmxheUNvbnRhaW5lciIsImJvZHkiLCJvdmVybGF5IiwiY3JlYXRlRWxlbWVudCIsImlkIiwic2V0QXR0cmlidXRlIiwicGFyZW50Tm9kZSIsImFwcGVuZENoaWxkIiwic2hvd092ZXJsYXkiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJoaWRlT3ZlcmxheSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFPLElBQU1BLFNBQVMsR0FBRyxrQkFBbEI7QUFFQSxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYTtBQUFBLFNBQU1DLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QkgsU0FBeEIsQ0FBTjtBQUFBLENBQW5CO0FBRUEsSUFBTUksVUFBVSxHQUFHLFNBQWJBLFVBQWEsR0FBTTtBQUM5QixNQUFNQyxnQkFBZ0IsR0FDcEJILFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QiwyQkFBeEIsS0FBd0RELFFBQVEsQ0FBQ0ksSUFEbkU7QUFHQSxNQUFNQyxPQUFPLEdBQUdOLFVBQVUsTUFBTUMsUUFBUSxDQUFDTSxhQUFULENBQXVCLEtBQXZCLENBQWhDO0FBQ0FELFNBQU8sQ0FBQ0UsRUFBUixHQUFhVCxTQUFiO0FBQ0FPLFNBQU8sQ0FBQ0csWUFBUixDQUNFLE9BREYsRUFFRSxzR0FGRjs7QUFLQSxNQUFJLENBQUNILE9BQU8sQ0FBQ0ksVUFBYixFQUF5QjtBQUN2Qk4sb0JBQWdCLENBQUNPLFdBQWpCLENBQTZCTCxPQUE3QjtBQUNEO0FBQ0YsQ0FkTTtBQWdCQSxJQUFNTSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFNO0FBRTdCLE1BQU1OLE9BQU8sR0FBR04sVUFBVSxFQUExQjtBQUNBTSxTQUFPLENBQUNPLFNBQVIsQ0FBa0JDLE1BQWxCLENBQXlCLFdBQXpCO0FBQ0FSLFNBQU8sQ0FBQ08sU0FBUixDQUFrQkMsTUFBbEIsQ0FBeUIscUJBQXpCO0FBQ0FSLFNBQU8sQ0FBQ08sU0FBUixDQUFrQkUsR0FBbEIsQ0FBc0IsWUFBdEI7QUFDQVQsU0FBTyxDQUFDTyxTQUFSLENBQWtCRSxHQUFsQixDQUFzQixxQkFBdEI7QUFFSCxDQVJNO0FBVUEsSUFBTUMsV0FBVyxHQUFHLFNBQWRBLFdBQWMsR0FBTTtBQUU3QixNQUFNVixPQUFPLEdBQUdOLFVBQVUsRUFBMUI7QUFDQU0sU0FBTyxDQUFDTyxTQUFSLENBQWtCQyxNQUFsQixDQUF5QixZQUF6QjtBQUNBUixTQUFPLENBQUNPLFNBQVIsQ0FBa0JDLE1BQWxCLENBQXlCLHFCQUF6QjtBQUNBUixTQUFPLENBQUNPLFNBQVIsQ0FBa0JFLEdBQWxCLENBQXNCLFdBQXRCO0FBQ0FULFNBQU8sQ0FBQ08sU0FBUixDQUFrQkUsR0FBbEIsQ0FBc0IscUJBQXRCO0FBRUgsQ0FSTSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG92ZXJsYXlJZCA9IFwibWVnYW1lbnUtb3ZlcmxheVwiO1xuXG5leHBvcnQgY29uc3QgZ2V0T3ZlcmxheSA9ICgpID0+IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG92ZXJsYXlJZCk7XG5cbmV4cG9ydCBjb25zdCBhZGRPdmVybGF5ID0gKCkgPT4ge1xuICBjb25zdCBvdmVybGF5Q29udGFpbmVyID1cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhlYWRlcl9fb3ZlcmxheS1jb250YWluZXJcIikgfHwgZG9jdW1lbnQuYm9keTtcblxuICBjb25zdCBvdmVybGF5ID0gZ2V0T3ZlcmxheSgpIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIG92ZXJsYXkuaWQgPSBvdmVybGF5SWQ7XG4gIG92ZXJsYXkuc2V0QXR0cmlidXRlKFxuICAgIFwiY2xhc3NcIixcbiAgICBcIm1lZ2FtZW51X19vdmVybGF5IGJnLWdyYXktMTAwIGJvdHRvbS0wIGZpeGVkIGxlZnQtMCByaWdodC0wIHRvcC0wIHotNDAgcG9pbnRlci1ldmVudHMtbm9uZSBvcGFjaXR5LTBcIlxuICApO1xuXG4gIGlmICghb3ZlcmxheS5wYXJlbnROb2RlKSB7XG4gICAgb3ZlcmxheUNvbnRhaW5lci5hcHBlbmRDaGlsZChvdmVybGF5KTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHNob3dPdmVybGF5ID0gKCkgPT4ge1xuXG4gICAgY29uc3Qgb3ZlcmxheSA9IGdldE92ZXJsYXkoKTtcbiAgICBvdmVybGF5LmNsYXNzTGlzdC5yZW1vdmUoXCJvcGFjaXR5LTBcIik7XG4gICAgb3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKFwicG9pbnRlci1ldmVudHMtbm9uZVwiKTtcbiAgICBvdmVybGF5LmNsYXNzTGlzdC5hZGQoXCJvcGFjaXR5LTc1XCIpO1xuICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZChcInBvaW50ZXItZXZlbnRzLWF1dG9cIik7XG5cbn07XG5cbmV4cG9ydCBjb25zdCBoaWRlT3ZlcmxheSA9ICgpID0+IHtcblxuICAgIGNvbnN0IG92ZXJsYXkgPSBnZXRPdmVybGF5KCk7XG4gICAgb3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKFwib3BhY2l0eS03NVwiKTtcbiAgICBvdmVybGF5LmNsYXNzTGlzdC5yZW1vdmUoXCJwb2ludGVyLWV2ZW50cy1hdXRvXCIpO1xuICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZChcIm9wYWNpdHktMFwiKTtcbiAgICBvdmVybGF5LmNsYXNzTGlzdC5hZGQoXCJwb2ludGVyLWV2ZW50cy1ub25lXCIpO1xuXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return breakpoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return scrollToTop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getHeaderBtn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return isTouchDevice; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return removeFocusState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return restoreOriginalHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return applyAppropriateHeight; });\nvar breakpoints = {\n  sm: 544,\n  md: 768,\n  lg: 990,\n  xl: 1200\n};\nvar scrollToTop = function scrollToTop() {\n  var currentPosition = window.scrollY;\n  if (currentPosition > 30) window.scrollTo({\n    top: 0,\n    behavior: "smooth"\n  });\n};\nvar getHeaderBtn = function getHeaderBtn() {\n  var headerBtn;\n\n  if (document.getElementsByClassName("mobileMenuButton")) {\n    headerBtn = document.getElementsByClassName("mobileMenuButton");\n  } else if (document.getElementsByClassName("mobile-menu-button")) {\n    headerBtn = document.getElementsByClassName("mobile-menu-button");\n  } else {\n    headerBtn = null;\n  }\n\n  return headerBtn;\n};\nvar isTouchDevice = function isTouchDevice() {\n  var prefixes = " -webkit- -moz- -o- -ms- ".split(" ");\n\n  var mq = function mq(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if ("ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch) {\n    return true;\n  }\n\n  var query = ["(", prefixes.join("touch-enabled),("), "heartz", ")"].join("");\n  return mq(query);\n};\nvar removeFocusState = function removeFocusState() {\n  var getLinksWithFocusStates = Array.from(document.querySelectorAll(".navigation-item__wrapper, .main-navigation__third-level-nav-item-link, .main-navigation__fourth-level-nav-item a"));\n  getLinksWithFocusStates.forEach(function (link) {\n    return link.style.boxShadow = "none";\n  });\n};\nvar restoreOriginalHeight = function restoreOriginalHeight(timeout) {\n  var holderEl = document.querySelector("#contentholder") !== null ? document.querySelector("#contentholder") : document.querySelector("#container");\n\n  if (holderEl) {\n    if (holderEl.getAttribute("data-height-fixed") === "true") {\n      setTimeout(function () {\n        holderEl.style.minHeight = "".concat(holderEl.getAttribute("data-original-height"), "px");\n      }, timeout);\n    }\n  }\n};\nvar applyAppropriateHeight = function applyAppropriateHeight(elementClass, holderElement) {\n  var megaMenuHeight = document.querySelector(elementClass).scrollHeight;\n\n  if (holderElement) {\n    var holderElementHeight = holderElement.offsetHeight;\n    holderElement.setAttribute("data-original-height", holderElementHeight);\n\n    if (holderElementHeight < megaMenuHeight + 200) {\n      holderElement.setAttribute("data-height-fixed", true);\n      holderElement.style.minHeight = "".concat(megaMenuHeight + 200, "px");\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9oZWxwZXJzLmpzPzRlYWEiXSwibmFtZXMiOlsiYnJlYWtwb2ludHMiLCJzbSIsIm1kIiwibGciLCJ4bCIsInNjcm9sbFRvVG9wIiwiY3VycmVudFBvc2l0aW9uIiwid2luZG93Iiwic2Nyb2xsWSIsInNjcm9sbFRvIiwidG9wIiwiYmVoYXZpb3IiLCJnZXRIZWFkZXJCdG4iLCJoZWFkZXJCdG4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpc1RvdWNoRGV2aWNlIiwicHJlZml4ZXMiLCJzcGxpdCIsIm1xIiwicXVlcnkiLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsIkRvY3VtZW50VG91Y2giLCJqb2luIiwicmVtb3ZlRm9jdXNTdGF0ZSIsImdldExpbmtzV2l0aEZvY3VzU3RhdGVzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJsaW5rIiwic3R5bGUiLCJib3hTaGFkb3ciLCJyZXN0b3JlT3JpZ2luYWxIZWlnaHQiLCJ0aW1lb3V0IiwiaG9sZGVyRWwiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0QXR0cmlidXRlIiwic2V0VGltZW91dCIsIm1pbkhlaWdodCIsImFwcGx5QXBwcm9wcmlhdGVIZWlnaHQiLCJlbGVtZW50Q2xhc3MiLCJob2xkZXJFbGVtZW50IiwibWVnYU1lbnVIZWlnaHQiLCJzY3JvbGxIZWlnaHQiLCJob2xkZXJFbGVtZW50SGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0Iiwic2V0QXR0cmlidXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFPLElBQU1BLFdBQVcsR0FBRztBQUN6QkMsSUFBRSxFQUFFLEdBRHFCO0FBRXpCQyxJQUFFLEVBQUUsR0FGcUI7QUFHekJDLElBQUUsRUFBRSxHQUhxQjtBQUl6QkMsSUFBRSxFQUFFO0FBSnFCLENBQXBCO0FBT0EsSUFBTUMsV0FBVyxHQUFHLFNBQWRBLFdBQWMsR0FBTTtBQUMvQixNQUFNQyxlQUFlLEdBQUdDLE1BQU0sQ0FBQ0MsT0FBL0I7QUFDQSxNQUFJRixlQUFlLEdBQUcsRUFBdEIsRUFBMEJDLE1BQU0sQ0FBQ0UsUUFBUCxDQUFnQjtBQUFFQyxPQUFHLEVBQUUsQ0FBUDtBQUFVQyxZQUFRLEVBQUU7QUFBcEIsR0FBaEI7QUFDM0IsQ0FITTtBQUtBLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLEdBQU07QUFDaEMsTUFBSUMsU0FBSjs7QUFDQSxNQUFJQyxRQUFRLENBQUNDLHNCQUFULENBQWdDLGtCQUFoQyxDQUFKLEVBQXlEO0FBQ3ZERixhQUFTLEdBQUdDLFFBQVEsQ0FBQ0Msc0JBQVQsQ0FBZ0Msa0JBQWhDLENBQVo7QUFDRCxHQUZELE1BRU8sSUFBSUQsUUFBUSxDQUFDQyxzQkFBVCxDQUFnQyxvQkFBaEMsQ0FBSixFQUEyRDtBQUNoRUYsYUFBUyxHQUFHQyxRQUFRLENBQUNDLHNCQUFULENBQWdDLG9CQUFoQyxDQUFaO0FBQ0QsR0FGTSxNQUVBO0FBQ0xGLGFBQVMsR0FBRyxJQUFaO0FBQ0Q7O0FBQ0QsU0FBT0EsU0FBUDtBQUNELENBVk07QUFZQSxJQUFNRyxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLEdBQU07QUFDakMsTUFBTUMsUUFBUSxHQUFHLDRCQUE0QkMsS0FBNUIsQ0FBa0MsR0FBbEMsQ0FBakI7O0FBQ0EsTUFBTUMsRUFBRSxHQUFHLFNBQUxBLEVBQUssQ0FBVUMsS0FBVixFQUFpQjtBQUMxQixXQUFPYixNQUFNLENBQUNjLFVBQVAsQ0FBa0JELEtBQWxCLEVBQXlCRSxPQUFoQztBQUNELEdBRkQ7O0FBSUEsTUFDRSxrQkFBa0JmLE1BQWxCLElBQ0NBLE1BQU0sQ0FBQ2dCLGFBQVAsSUFBd0JULFFBQVEsWUFBWVAsTUFBTSxDQUFDZ0IsYUFGdEQsRUFHRTtBQUNBLFdBQU8sSUFBUDtBQUNEOztBQUVELE1BQU1ILEtBQUssR0FBRyxDQUFDLEdBQUQsRUFBTUgsUUFBUSxDQUFDTyxJQUFULENBQWMsa0JBQWQsQ0FBTixFQUF5QyxRQUF6QyxFQUFtRCxHQUFuRCxFQUF3REEsSUFBeEQsQ0FDWixFQURZLENBQWQ7QUFHQSxTQUFPTCxFQUFFLENBQUNDLEtBQUQsQ0FBVDtBQUNELENBakJNO0FBbUJBLElBQU1LLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsR0FBTTtBQUNwQyxNQUFNQyx1QkFBdUIsR0FBR0MsS0FBSyxDQUFDQyxJQUFOLENBQzlCZCxRQUFRLENBQUNlLGdCQUFULENBQ0UsbUhBREYsQ0FEOEIsQ0FBaEM7QUFLQUgseUJBQXVCLENBQUNJLE9BQXhCLENBQWdDLFVBQUNDLElBQUQ7QUFBQSxXQUFXQSxJQUFJLENBQUNDLEtBQUwsQ0FBV0MsU0FBWCxHQUF1QixNQUFsQztBQUFBLEdBQWhDO0FBQ0QsQ0FQTTtBQVNBLElBQU1DLHFCQUFxQixHQUFHLFNBQXhCQSxxQkFBd0IsQ0FBQ0MsT0FBRCxFQUFhO0FBQ2hELE1BQU1DLFFBQVEsR0FDWnRCLFFBQVEsQ0FBQ3VCLGFBQVQsQ0FBdUIsZ0JBQXZCLE1BQTZDLElBQTdDLEdBQ0l2QixRQUFRLENBQUN1QixhQUFULENBQXVCLGdCQUF2QixDQURKLEdBRUl2QixRQUFRLENBQUN1QixhQUFULENBQXVCLFlBQXZCLENBSE47O0FBSUEsTUFBSUQsUUFBSixFQUFjO0FBQ1osUUFBSUEsUUFBUSxDQUFDRSxZQUFULENBQXNCLG1CQUF0QixNQUErQyxNQUFuRCxFQUEyRDtBQUN6REMsZ0JBQVUsQ0FBQyxZQUFNO0FBQ2ZILGdCQUFRLENBQUNKLEtBQVQsQ0FBZVEsU0FBZixhQUE4QkosUUFBUSxDQUFDRSxZQUFULENBQzVCLHNCQUQ0QixDQUE5QjtBQUdELE9BSlMsRUFJUEgsT0FKTyxDQUFWO0FBS0Q7QUFDRjtBQUNGLENBZE07QUFnQkEsSUFBTU0sc0JBQXNCLEdBQUcsU0FBekJBLHNCQUF5QixDQUFDQyxZQUFELEVBQWVDLGFBQWYsRUFBaUM7QUFDckUsTUFBTUMsY0FBYyxHQUFHOUIsUUFBUSxDQUFDdUIsYUFBVCxDQUF1QkssWUFBdkIsRUFBcUNHLFlBQTVEOztBQUNBLE1BQUlGLGFBQUosRUFBbUI7QUFDakIsUUFBTUcsbUJBQW1CLEdBQUdILGFBQWEsQ0FBQ0ksWUFBMUM7QUFDQUosaUJBQWEsQ0FBQ0ssWUFBZCxDQUEyQixzQkFBM0IsRUFBbURGLG1CQUFuRDs7QUFDQSxRQUFJQSxtQkFBbUIsR0FBR0YsY0FBYyxHQUFHLEdBQTNDLEVBQWdEO0FBQzlDRCxtQkFBYSxDQUFDSyxZQUFkLENBQTJCLG1CQUEzQixFQUFnRCxJQUFoRDtBQUNBTCxtQkFBYSxDQUFDWCxLQUFkLENBQW9CUSxTQUFwQixhQUFtQ0ksY0FBYyxHQUFHLEdBQXBEO0FBQ0Q7QUFDRjtBQUNGLENBVk0iLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBicmVha3BvaW50cyA9IHtcbiAgc206IDU0NCxcbiAgbWQ6IDc2OCxcbiAgbGc6IDk5MCxcbiAgeGw6IDEyMDAsXG59O1xuXG5leHBvcnQgY29uc3Qgc2Nyb2xsVG9Ub3AgPSAoKSA9PiB7XG4gIGNvbnN0IGN1cnJlbnRQb3NpdGlvbiA9IHdpbmRvdy5zY3JvbGxZO1xuICBpZiAoY3VycmVudFBvc2l0aW9uID4gMzApIHdpbmRvdy5zY3JvbGxUbyh7IHRvcDogMCwgYmVoYXZpb3I6IFwic21vb3RoXCIgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0SGVhZGVyQnRuID0gKCkgPT4ge1xuICBsZXQgaGVhZGVyQnRuO1xuICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1vYmlsZU1lbnVCdXR0b25cIikpIHtcbiAgICBoZWFkZXJCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibW9iaWxlTWVudUJ1dHRvblwiKTtcbiAgfSBlbHNlIGlmIChkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibW9iaWxlLW1lbnUtYnV0dG9uXCIpKSB7XG4gICAgaGVhZGVyQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1vYmlsZS1tZW51LWJ1dHRvblwiKTtcbiAgfSBlbHNlIHtcbiAgICBoZWFkZXJCdG4gPSBudWxsO1xuICB9XG4gIHJldHVybiBoZWFkZXJCdG47XG59O1xuXG5leHBvcnQgY29uc3QgaXNUb3VjaERldmljZSA9ICgpID0+IHtcbiAgY29uc3QgcHJlZml4ZXMgPSBcIiAtd2Via2l0LSAtbW96LSAtby0gLW1zLSBcIi5zcGxpdChcIiBcIik7XG4gIGNvbnN0IG1xID0gZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgcmV0dXJuIHdpbmRvdy5tYXRjaE1lZGlhKHF1ZXJ5KS5tYXRjaGVzO1xuICB9O1xuXG4gIGlmIChcbiAgICBcIm9udG91Y2hzdGFydFwiIGluIHdpbmRvdyB8fFxuICAgICh3aW5kb3cuRG9jdW1lbnRUb3VjaCAmJiBkb2N1bWVudCBpbnN0YW5jZW9mIHdpbmRvdy5Eb2N1bWVudFRvdWNoKVxuICApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGNvbnN0IHF1ZXJ5ID0gW1wiKFwiLCBwcmVmaXhlcy5qb2luKFwidG91Y2gtZW5hYmxlZCksKFwiKSwgXCJoZWFydHpcIiwgXCIpXCJdLmpvaW4oXG4gICAgXCJcIlxuICApO1xuICByZXR1cm4gbXEocXVlcnkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHJlbW92ZUZvY3VzU3RhdGUgPSAoKSA9PiB7XG4gIGNvbnN0IGdldExpbmtzV2l0aEZvY3VzU3RhdGVzID0gQXJyYXkuZnJvbShcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgXCIubmF2aWdhdGlvbi1pdGVtX193cmFwcGVyLCAubWFpbi1uYXZpZ2F0aW9uX190aGlyZC1sZXZlbC1uYXYtaXRlbS1saW5rLCAubWFpbi1uYXZpZ2F0aW9uX19mb3VydGgtbGV2ZWwtbmF2LWl0ZW0gYVwiXG4gICAgKVxuICApO1xuICBnZXRMaW5rc1dpdGhGb2N1c1N0YXRlcy5mb3JFYWNoKChsaW5rKSA9PiAobGluay5zdHlsZS5ib3hTaGFkb3cgPSBcIm5vbmVcIikpO1xufTtcblxuZXhwb3J0IGNvbnN0IHJlc3RvcmVPcmlnaW5hbEhlaWdodCA9ICh0aW1lb3V0KSA9PiB7XG4gIGNvbnN0IGhvbGRlckVsID1cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnRob2xkZXJcIikgIT09IG51bGxcbiAgICAgID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250ZW50aG9sZGVyXCIpXG4gICAgICA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGFpbmVyXCIpO1xuICBpZiAoaG9sZGVyRWwpIHtcbiAgICBpZiAoaG9sZGVyRWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1oZWlnaHQtZml4ZWRcIikgPT09IFwidHJ1ZVwiKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaG9sZGVyRWwuc3R5bGUubWluSGVpZ2h0ID0gYCR7aG9sZGVyRWwuZ2V0QXR0cmlidXRlKFxuICAgICAgICAgIFwiZGF0YS1vcmlnaW5hbC1oZWlnaHRcIlxuICAgICAgICApfXB4YDtcbiAgICAgIH0sIHRpbWVvdXQpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGFwcGx5QXBwcm9wcmlhdGVIZWlnaHQgPSAoZWxlbWVudENsYXNzLCBob2xkZXJFbGVtZW50KSA9PiB7XG4gIGNvbnN0IG1lZ2FNZW51SGVpZ2h0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbGVtZW50Q2xhc3MpLnNjcm9sbEhlaWdodDtcbiAgaWYgKGhvbGRlckVsZW1lbnQpIHtcbiAgICBjb25zdCBob2xkZXJFbGVtZW50SGVpZ2h0ID0gaG9sZGVyRWxlbWVudC5vZmZzZXRIZWlnaHQ7XG4gICAgaG9sZGVyRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXRhLW9yaWdpbmFsLWhlaWdodFwiLCBob2xkZXJFbGVtZW50SGVpZ2h0KTtcbiAgICBpZiAoaG9sZGVyRWxlbWVudEhlaWdodCA8IG1lZ2FNZW51SGVpZ2h0ICsgMjAwKSB7XG4gICAgICBob2xkZXJFbGVtZW50LnNldEF0dHJpYnV0ZShcImRhdGEtaGVpZ2h0LWZpeGVkXCIsIHRydWUpO1xuICAgICAgaG9sZGVyRWxlbWVudC5zdHlsZS5taW5IZWlnaHQgPSBgJHttZWdhTWVudUhlaWdodCArIDIwMH1weGA7XG4gICAgfVxuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return setupHeaderBtn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return setupBackBtns; });\n/* unused harmony export backBtnClickHandler */\n/* unused harmony export setTabIndexForChildrenNode */\n/* unused harmony export mobileMegaMenuClickHandler */\n/* unused harmony export closeOnWindowClick */\n/* unused harmony export firstLevelMenuHandler */\n/* unused harmony export firstLevelItemsHandler */\n/* unused harmony export closeSecondLevelMenu */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return mobileMegaMenu; });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _overlay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(0);\n\n\n\nfunction initialiseMegamenuClose() {\n  var mobileMegaMenu = document.getElementsByClassName("global-megamenu__top-level-nav--mobile")[0];\n  mobileMegaMenu.classList.remove("global-megamenu__top-level-nav--mobile-visible");\n  var htmlElement = document.documentElement;\n  htmlElement.classList.remove("mob-megamenu-open");\n  closeSecondLevelMenu();\n  Object(_overlay__WEBPACK_IMPORTED_MODULE_1__[/* hideOverlay */ "c"])();\n  Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[/* restoreOriginalHeight */ "f"])();\n  window.removeEventListener("click", closeOnWindowClick);\n}\n\nwindow.addEventListener("triggerMegamenuClose", function () {\n  var overlayElement = document.getElementsByClassName("mobileMenuOpenOverlay")[0] || Object(_overlay__WEBPACK_IMPORTED_MODULE_1__[/* getOverlay */ "b"])();\n\n  if (overlayElement && (overlayElement.classList.contains("inUse") || window.getComputedStyle(overlayElement).opacity > 0)) {\n    initialiseMegamenuClose();\n  }\n});\nvar setupHeaderBtn = function setupHeaderBtn(getHeaderBtn) {\n  var headerButton = Array.from(getHeaderBtn());\n\n  if (headerButton.length > 0) {\n    headerButton.forEach(function (button) {\n      button.addEventListener("click", mobileMegaMenuClickHandler, false);\n    });\n  }\n};\nvar setupBackBtns = function setupBackBtns() {\n  var backBtnsArray = Array.from(document.querySelectorAll(".back-button"));\n  backBtnsArray.forEach(function (backBtn) {\n    backBtn.addEventListener("click", backBtnClickHandler, false);\n  });\n};\nvar backBtnClickHandler = function backBtnClickHandler(evt) {\n  evt.preventDefault();\n  var nestedLevelUlMenu = evt.currentTarget.parentNode;\n  var topLevelUlMegaMenu = document.getElementsByClassName("top-level-menu--mobile")[0];\n  var prevUlHeight = topLevelUlMegaMenu.getAttribute("prev-height");\n\n  if (nestedLevelUlMenu) {\n    nestedLevelUlMenu.setAttribute("aria-hidden", "true");\n    nestedLevelUlMenu.classList.remove("selected");\n    topLevelUlMegaMenu.style.maxHeight = "1500px";\n    topLevelUlMegaMenu.style.height = "".concat(prevUlHeight, "px");\n  }\n\n  topLevelUlMegaMenu.setAttribute("back-second-level", true);\n  setTabIndexForChildrenNode(true);\n  setTimeout(function () {\n    firstLevelMenuHandler();\n  }, 200);\n};\nvar setTabIndexForChildrenNode = function setTabIndexForChildrenNode(negative) {\n  var secondaryMenuItemsArr = Array.from(document.querySelectorAll(".secondary-navigation-item__wrapper"));\n\n  if (negative) {\n    secondaryMenuItemsArr.forEach(function (secondaryLevelNavItem) {\n      secondaryLevelNavItem.setAttribute("tabindex", "-1");\n    });\n  } else {\n    secondaryMenuItemsArr.forEach(function (secondaryLevelNavItem) {\n      secondaryLevelNavItem.setAttribute("tabindex", "0");\n    });\n  }\n};\nvar mobileMegaMenuClickHandler = function mobileMegaMenuClickHandler(evt) {\n  evt.preventDefault();\n  var htmlElement = document.documentElement;\n  htmlElement.classList.toggle("mob-megamenu-open");\n  var mobileMegaMenu = document.getElementsByClassName("global-megamenu__top-level-nav--mobile")[0];\n  mobileMegaMenu.classList.toggle("global-megamenu__top-level-nav--mobile-visible");\n\n  if (mobileMegaMenu.classList.contains("global-megamenu__top-level-nav--mobile-visible")) {\n    var holderEl = document.querySelector("#contentholder") !== null ? document.querySelector("#contentholder") : document.querySelector("#container");\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[/* applyAppropriateHeight */ "a"])(".global-megamenu__top-level-nav--mobile", holderEl);\n    Object(_overlay__WEBPACK_IMPORTED_MODULE_1__[/* showOverlay */ "d"])();\n  } else {\n    Object(_overlay__WEBPACK_IMPORTED_MODULE_1__[/* hideOverlay */ "c"])();\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[/* restoreOriginalHeight */ "f"])(600);\n  }\n\n  closeSecondLevelMenu();\n\n  if (mobileMegaMenu.classList.contains("global-megamenu__top-level-nav--mobile-visible")) {\n    firstLevelMenuHandler();\n    window.addEventListener("click", closeOnWindowClick, false);\n  }\n};\nvar closeOnWindowClick = function closeOnWindowClick(evt) {\n  if (evt.target === Object(_overlay__WEBPACK_IMPORTED_MODULE_1__[/* getOverlay */ "b"])() || evt.target.classList.contains("mobileMenuOpenOverlay") || evt.target.classList.contains("mobileSearchButon") || evt.target.classList.contains("mobile-search-button") || evt.target.classList.contains("icon-telephone") || evt.target.classList.contains("icon-search") || evt.target.classList.contains("mob-megamenu-open")) {\n    initialiseMegamenuClose();\n  }\n};\nvar firstLevelMenuHandler = function firstLevelMenuHandler() {\n  var firstLevelMegaMenuNodeList = document.querySelectorAll(".navigation-item");\n  var firstLevelItemsArr = Array.from(firstLevelMegaMenuNodeList);\n  firstLevelItemsArr.forEach(function (firstLevelMenuItem) {\n    //removing deals and helpAdvice from evt listener\n    var itemDataId = firstLevelMenuItem.getAttribute("data-automation");\n\n    if (itemDataId !== "megamenu-top-level-menu-item-top-sale" && itemDataId !== "megamenu-top-level-menu-item-top-bestbuys" && itemDataId !== "megamenu-top-level-menu-item-top-christmasGifts") {\n      firstLevelMenuItem.addEventListener("click", firstLevelItemsHandler);\n    }\n  });\n};\nvar firstLevelItemsHandler = function firstLevelItemsHandler(evt) {\n  evt.preventDefault();\n  var currentTargetElement = evt.currentTarget;\n  var topLevelUlMenu = document.getElementsByClassName("top-level-menu--mobile")[0];\n  var nestedUlMenu = currentTargetElement.getElementsByClassName("second-level-menu")[0];\n\n  if (nestedUlMenu) {\n    var topLevelMenuHeight = topLevelUlMenu.clientHeight;\n    nestedUlMenu.setAttribute("aria-hidden", false);\n    topLevelUlMenu.setAttribute("aria-hidden", true);\n    nestedUlMenu.setAttribute("aria-hidden", false);\n    nestedUlMenu.classList.add("selected");\n    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__[/* scrollToTop */ "g"])();\n    setTabIndexForChildrenNode();\n    var nestedLevelMenuHeight = nestedUlMenu.clientHeight;\n    topLevelUlMenu.style.overflow = "hidden";\n    topLevelUlMenu.setAttribute("prev-height", topLevelMenuHeight);\n    topLevelUlMenu.style.maxHeight = "".concat(nestedLevelMenuHeight - 8, "px");\n    topLevelUlMenu.style.height = "".concat(nestedLevelMenuHeight - 8, "px");\n    currentTargetElement.removeEventListener("click", firstLevelItemsHandler);\n    topLevelUlMenu.setAttribute("back-second-level", false);\n  }\n};\nvar closeSecondLevelMenu = function closeSecondLevelMenu() {\n  var topLevelUlMenu = document.getElementsByClassName("top-level-menu--mobile")[0];\n  var openSecondaryMenu = document.querySelector(".second-level-menu.selected");\n  var topLevelUlMenuHeight = topLevelUlMenu.getAttribute("prev-height");\n\n  if (topLevelUlMenu.style.maxHeight && topLevelUlMenu.getAttribute("back-second-level") === "false") {\n    if (openSecondaryMenu) {\n      openSecondaryMenu.classList.remove("selected");\n      openSecondaryMenu.setAttribute("aria-hidden", "true");\n    }\n\n    topLevelUlMenu.style.height = "".concat(topLevelUlMenuHeight, "px");\n    topLevelUlMenu.style.maxHeight = "1500px";\n    topLevelUlMenu.parentNode.style.opacity = "0";\n    topLevelUlMenu.setAttribute("back-second-level", "true");\n    setTimeout(function () {\n      topLevelUlMenu.parentNode.style.opacity = "1";\n    }, 650);\n  }\n\n  window.removeEventListener("click", closeOnWindowClick);\n};\nvar mobileMegaMenu = function mobileMegaMenu(setupHeaderBtn, setupBackBtns, getHeaderBtn) {\n  setupHeaderBtn(getHeaderBtn);\n  setupBackBtns();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return initLazyProximity; });\nfunction _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction initLazyProximity() {\n  //lazy-proximity.min.js\n  !function (e, t) {\n    if ("object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module))) module.exports = t();else if ("function" == typeof define && __webpack_require__(7)) define([], t);else {\n      var n = t();\n\n      for (var r in n) {\n        ("object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports : e)[r] = n[r];\n      }\n    }\n  }(window, function () {\n    return function (e) {\n      var t = {};\n\n      function n(r) {\n        if (t[r]) return t[r].exports;\n        var o = t[r] = {\n          i: r,\n          l: !1,\n          exports: {}\n        };\n        return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n      }\n\n      return n.m = e, n.c = t, n.d = function (e, t, r) {\n        n.o(e, t) || Object.defineProperty(e, t, {\n          enumerable: !0,\n          get: r\n        });\n      }, n.r = function (e) {\n        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: "Module"\n        }), Object.defineProperty(e, "__esModule", {\n          value: !0\n        });\n      }, n.t = function (e, t) {\n        if (1 & t && (e = n(e)), 8 & t) return e;\n        if (4 & t && "object" == _typeof(e) && e && e.__esModule) return e;\n        var r = Object.create(null);\n        if (n.r(r), Object.defineProperty(r, "default", {\n          enumerable: !0,\n          value: e\n        }), 2 & t && "string" != typeof e) for (var o in e) {\n          n.d(r, o, function (t) {\n            return e[t];\n          }.bind(null, o));\n        }\n        return r;\n      }, n.n = function (e) {\n        var t = e && e.__esModule ? function () {\n          return e["default"];\n        } : function () {\n          return e;\n        };\n        return n.d(t, "a", t), t;\n      }, n.o = function (e, t) {\n        return Object.prototype.hasOwnProperty.call(e, t);\n      }, n.p = "", n(n.s = 4);\n    }([function (e, t) {\n      e.exports = {\n        debounce: function debounce(e, t, n) {\n          var r;\n          return function () {\n            var o = this,\n                i = arguments;\n\n            function c() {\n              r = null, n || e.apply(o, i);\n            }\n\n            var a = n && !r;\n            clearTimeout(r), r = setTimeout(c, t), a && e.apply(o, i);\n          };\n        },\n        createEvent: function createEvent(e) {\n          if (document.createEvent) {\n            var t = document.createEvent("CustomEvent");\n            return t.initEvent(e, !0, !0), t;\n          }\n\n          return new Event(e);\n        }\n      };\n    }, function (e, t, n) {\n      var r = n(0).createEvent,\n          o = n(2).lazyLoadImage,\n          i = "lazyload",\n          c = r(i),\n          a = "data-lazy-src",\n          u = function () {\n        function e(e) {\n          var t = Array.from(document.querySelectorAll(e));\n          t.length ? (this.images = t.map(function (e) {\n            return {\n              image: e,\n              resolved: !1,\n              src: l(e)\n            };\n          }), this.images.forEach(function (e) {\n            e.onLoad = o.bind(e), e.image.addEventListener(i, e.onLoad);\n          })) : console.warn("No elements matching the selector " + e + " were found, LazyLoad could not initialise");\n        }\n\n        var t = e.prototype;\n        return t.fireLazyLoadEvent = function (e) {\n          e.dispatchEvent(c);\n        }, t.destroy = function () {\n          this.images.forEach(function (e) {\n            e.image.removeEventListener(i, e.onLoad);\n          });\n        }, e;\n      }();\n\n      function l(e) {\n        var t = e.getAttribute(a);\n        if (t) return t;\n        var n = Array.from(e.children).map(function (e) {\n          return e.constructor === HTMLVideoElement ? Array.from(e.children).map(function (e) {\n            return e.getAttribute(a);\n          }) : e.getAttribute(a);\n        });\n        return [].concat.apply([], n);\n      }\n\n      e.exports = {\n        LazyLoad: u\n      };\n    }, function (e, t, n) {\n      var r = n(0).createEvent,\n          o = r("lazyloadcomplete"),\n          i = r("lazyloaderror");\n\n      function c(e, t) {\n        return new Promise(function (n, r) {\n          function o() {\n            c(), n(!0);\n          }\n\n          function i() {\n            c(), r(!1);\n          }\n\n          function c() {\n            t.removeEventListener("load", o), t.removeEventListener("error", i);\n          }\n\n          if (t.addEventListener("load", o), t.addEventListener("error", i), t.parentNode && t.parentNode.constructor === window.HTMLPictureElement || t.parentNode && void 0 === window.HTMLPictureElement && t.parentNode.constructor === window.HTMLUnknownElement || t.parentNode && void 0 === window.HTMLPictureElement && t.parentNode.constructor === window.HTMLElement) {\n            var a = 0;\n            Array.from(t.parentNode.children).forEach(function (t) {\n              t.constructor !== HTMLVideoElement ? (t.setAttribute("srcset", e[a]), a++) : Array.from(t.children).forEach(function (t) {\n                t.setAttribute("srcset", e[a]), a++;\n              });\n            });\n          } else t.setAttribute("src", e);\n        });\n      }\n\n      function a(e) {\n        switch (!0) {\n          case e.constructor === HTMLImageElement:\n            return u;\n\n          case e.constructor === window.HTMLPictureElement || void 0 === window.HTMLPictureElement && e.constructor === window.HTMLUnknownElement || void 0 === window.HTMLPictureElement && e.constructor === window.HTMLElement:\n            return function () {};\n\n          default:\n            return l;\n        }\n      }\n\n      function u(e, t) {\n        e.setAttribute("src", t);\n      }\n\n      function l(e, t) {\n        e.style.backgroundImage = "url(" + t + ")";\n      }\n\n      e.exports = {\n        lazyLoadImage: function lazyLoadImage() {\n          var e = this,\n              t = this.image,\n              n = this.src,\n              r = new Image();\n          (t.constructor === window.HTMLPictureElement || void 0 === window.HTMLPictureElement && t.constructor === window.HTMLUnknownElement || void 0 === window.HTMLPictureElement && t.constructor === window.HTMLElement) && (r = t.querySelector("img"));\n          var u = a(t);\n          c(n, r).then(function () {\n            u(t, n), e.resolved = !0, t.dispatchEvent(o);\n          })["catch"](function () {\n            t.dispatchEvent(i);\n          });\n        },\n        loadImage: c,\n        getOnLoadCallback: a,\n        onShowImage: u,\n        onShowBackgroundImage: l\n      };\n    },, function (e, t, n) {\n      function r(e) {\n        if (void 0 === e) throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n        return e;\n      }\n\n      function o(e, t) {\n        e.prototype = Object.create(t.prototype), e.prototype.constructor = e, function (e, t) {\n          for (var n = Object.getOwnPropertyNames(t), r = 0; r < n.length; r++) {\n            var o = n[r],\n                i = Object.getOwnPropertyDescriptor(t, o);\n            i && i.configurable && void 0 === e[o] && Object.defineProperty(e, o, i);\n          }\n        }(e, t);\n      }\n\n      var i = n(1).LazyLoad,\n          c = n(0).debounce,\n          a = "data-lazy-target",\n          u = function (e) {\n        function t(t, n) {\n          var o;\n          if (!(o = e.call(this, t) || this).images) return console.warn("No elements matching the selector " + t + "\\n\\t\\t\\t\\twere found, LazyProximity could not initialise"), r(o);\n          var i = l.call(r(o), n);\n          return i.length ? (o.images = o.images.map(function (e) {\n            var t, n;\n            return i.forEach(function (r) {\n              r.targets.some(function (t) {\n                return t === e.image;\n              }) && (t = r.trigger, n = r.onClickCallback);\n            }), Object.assign({}, e, {\n              lazyProximityTrigger: t,\n              onClickCallback: n\n            });\n          }), o.onMouseOver = c(d.bind(r(o)), 100), document.addEventListener("mouseover", o.onMouseOver), o.onTouchStart = c(f.bind(r(o)), 100), document.addEventListener("touchstart", o.onTouchStart), o) : (console.warn("No elements matching the selector " + i + "\\n\\t\\t\\t\\twere found, LazyProximity could not initialise"), r(o));\n        }\n\n        return o(t, e), t;\n      }(i);\n\n      function l(e) {\n        var t = this;\n        return Array.from(document.querySelectorAll(e)).map(function (e) {\n          var n = Array.from(document.querySelectorAll(e.getAttribute(a))),\n              r = m.bind(t);\n          return e.addEventListener("click", r), {\n            trigger: e,\n            targets: n,\n            onClickCallback: r\n          };\n        });\n      }\n\n      function s(e) {\n        return e.filter(function (e) {\n          return !e.resolved;\n        });\n      }\n\n      function d(e) {\n        var t = this,\n            n = s(this.images);\n\n        if (0 !== n.length) {\n          var r = e.clientX,\n              o = e.clientY,\n              i = document.elementFromPoint(r, o);\n          n.forEach(function (e) {\n            var n = e.lazyProximityTrigger,\n                r = e.onClickCallback,\n                o = e.image;\n            n && (n === i || n.contains(i)) && (t.fireLazyLoadEvent(o), e.resolved = !0, n.removeEventListener("click", r));\n          });\n        } else document.removeEventListener("mouseover", this.onMouseOver);\n      }\n\n      function f(e) {\n        var t = this,\n            n = s(this.images);\n\n        if (0 !== n.length) {\n          var r = e.target;\n          n.forEach(function (e) {\n            var n = e.lazyProximityTrigger,\n                o = e.onClickCallback,\n                i = e.image;\n            n && (n === r || n.contains(r)) && (t.fireLazyLoadEvent(i), e.resolved = !0, n.removeEventListener("click", o));\n          });\n        } else document.removeEventListener("touchstart", this.onTouchStart);\n      }\n\n      function m(e) {\n        var t = this,\n            n = e.target;\n        this.images.forEach(function (e) {\n          var r = e.lazyProximityTrigger,\n              o = e.image,\n              i = e.onClickCallback;\n          r && (r === n || r.contains(n)) && (t.fireLazyLoadEvent(o), e.resolved = !0, r.removeEventListener("click", i));\n        });\n      }\n\n      e.exports = {\n        LazyProximity: u,\n        getProximityTriggers: l\n      };\n    }]);\n  }); // initial setup\n\n  window.addEventListener("load", function () {\n    var links = Array.from(document.querySelectorAll(\'[data-lazy-merch="true"]\'));\n    var lazyImageSelectors = [];\n\n    if (links.length) {\n      links.forEach(function (link) {\n        if (link.hasAttribute("data-lazy-target")) {\n          lazyImageSelectors.push(link.getAttribute("data-lazy-target"));\n        }\n      });\n    }\n\n    if (window.LazyProximity && lazyImageSelectors.length > 0) {\n      new LazyProximity(lazyImageSelectors.join(","), \'[data-lazy-merch="true"]\');\n    }\n\n    if (typeof window.HTMLPictureElement === "undefined") {\n      window.addEventListener("lazyload", function (event) {\n        var lazyImage = event.target;\n        picturefill({\n          reevaluate: true,\n          elements: [lazyImage.querySelector("img")]\n        });\n      });\n    }\n  });\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return polyfills; });\nfunction polyfills() {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      var el = this;\n\n      do {\n        if (el.matches(s)) return el;\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n\n      return null;\n    };\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9wb2x5ZmlsbHMuanM/YjYyZiJdLCJuYW1lcyI6WyJwb2x5ZmlsbHMiLCJFbGVtZW50IiwicHJvdG90eXBlIiwibWF0Y2hlcyIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwid2Via2l0TWF0Y2hlc1NlbGVjdG9yIiwiY2xvc2VzdCIsInMiLCJlbCIsInBhcmVudEVsZW1lbnQiLCJwYXJlbnROb2RlIiwibm9kZVR5cGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQU8sU0FBU0EsU0FBVCxHQUFxQjtBQUMxQixNQUFJLENBQUNDLE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkMsT0FBdkIsRUFBZ0M7QUFDOUJGLFdBQU8sQ0FBQ0MsU0FBUixDQUFrQkMsT0FBbEIsR0FDRUYsT0FBTyxDQUFDQyxTQUFSLENBQWtCRSxpQkFBbEIsSUFDQUgsT0FBTyxDQUFDQyxTQUFSLENBQWtCRyxxQkFGcEI7QUFHRDs7QUFFRCxNQUFJLENBQUNKLE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkksT0FBdkIsRUFBZ0M7QUFDOUJMLFdBQU8sQ0FBQ0MsU0FBUixDQUFrQkksT0FBbEIsR0FBNEIsVUFBU0MsQ0FBVCxFQUFZO0FBQ3RDLFVBQUlDLEVBQUUsR0FBRyxJQUFUOztBQUVBLFNBQUc7QUFDRCxZQUFJQSxFQUFFLENBQUNMLE9BQUgsQ0FBV0ksQ0FBWCxDQUFKLEVBQW1CLE9BQU9DLEVBQVA7QUFDbkJBLFVBQUUsR0FBR0EsRUFBRSxDQUFDQyxhQUFILElBQW9CRCxFQUFFLENBQUNFLFVBQTVCO0FBQ0QsT0FIRCxRQUdTRixFQUFFLEtBQUssSUFBUCxJQUFlQSxFQUFFLENBQUNHLFFBQUgsS0FBZ0IsQ0FIeEM7O0FBSUEsYUFBTyxJQUFQO0FBQ0QsS0FSRDtBQVNEO0FBQ0YiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwb2x5ZmlsbHMoKSB7XG4gIGlmICghRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlcykge1xuICAgIEVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXMgPVxuICAgICAgRWxlbWVudC5wcm90b3R5cGUubXNNYXRjaGVzU2VsZWN0b3IgfHxcbiAgICAgIEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3RvcjtcbiAgfVxuXG4gIGlmICghRWxlbWVudC5wcm90b3R5cGUuY2xvc2VzdCkge1xuICAgIEVsZW1lbnQucHJvdG90eXBlLmNsb3Nlc3QgPSBmdW5jdGlvbihzKSB7XG4gICAgICB2YXIgZWwgPSB0aGlzO1xuXG4gICAgICBkbyB7XG4gICAgICAgIGlmIChlbC5tYXRjaGVzKHMpKSByZXR1cm4gZWw7XG4gICAgICAgIGVsID0gZWwucGFyZW50RWxlbWVudCB8fCBlbC5wYXJlbnROb2RlO1xuICAgICAgfSB3aGlsZSAoZWwgIT09IG51bGwgJiYgZWwubm9kZVR5cGUgPT09IDEpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ desktopScripts; });\n\n// UNUSED EXPORTS: menuAimInitialisation, resetSecondLevelOnMegamenuClose, eventHandlers\n\n// EXTERNAL MODULE: ./src/scripts/helpers.js\nvar helpers = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/scripts/overlay.js\nvar scripts_overlay = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/scripts/nav-zone.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar noop = function noop() {};\n\nvar MenuAim = function MenuAim(el, opts) {\n  var _this = this;\n\n  _classCallCheck(this, MenuAim);\n\n  _defineProperty(this, "mousemoveDocument", function (e) {\n    _this.mouseLocs.push({\n      x: e.pageX,\n      y: e.pageY\n    });\n\n    if (_this.mouseLocs.length > _this.MOUSE_LOCS_TRACKED) {\n      _this.mouseLocs.shift();\n    }\n  });\n\n  _defineProperty(this, "mouseleaveMenu", function (row) {\n    if (_this.timeoutId) {\n      clearTimeout(_this.timeoutId);\n    }\n\n    if (_this.options.exitMenu(row)) {\n      if (_this.activeRow) {\n        _this.options.deactivate(_this.activeRow);\n      }\n\n      _this.activeRow = null;\n    }\n  });\n\n  _defineProperty(this, "mouseenterRow", function (row) {\n    if (_this.timeoutId) {\n      clearTimeout(_this.timeoutId);\n    }\n\n    _this.options.enter(row);\n\n    _this.possiblyActivate(row);\n  });\n\n  _defineProperty(this, "mouseleaveRow", function (row) {\n    _this.options.exit(row);\n  });\n\n  _defineProperty(this, "clickRow", function (row) {\n    _this.activate(row);\n  });\n\n  _defineProperty(this, "activate", function (row) {\n    if (row == _this.activeRow) {\n      return;\n    }\n\n    if (_this.activeRow) {\n      _this.options.deactivate(_this.activeRow);\n    }\n\n    _this.options.activate(row);\n\n    _this.activeRow = row;\n  });\n\n  _defineProperty(this, "possiblyActivate", function (row) {\n    var delay = _this.activationDelay();\n\n    if (delay) {\n      _this.timeoutId = setTimeout(function () {\n        _this.possiblyActivate(row);\n      }, delay);\n    } else {\n      _this.activate(row);\n    }\n  });\n\n  _defineProperty(this, "activationDelay", function () {\n    if (!_this.activeRow || !_this.activeRow.matches(_this.options.submenuSelector)) {\n      return 0;\n    }\n\n    var offset = _this.menu.getBoundingClientRect(),\n        upperLeft = {\n      x: offset.left + document.body.scrollLeft,\n      y: offset.top + document.body.scrollTop - _this.options.tolerance\n    },\n        upperRight = {\n      x: offset.left + document.body.scrollLeft + _this.menu.offsetWidth,\n      y: upperLeft.y\n    },\n        lowerLeft = {\n      x: offset.left + document.body.scrollLeft,\n      y: offset.top + document.body.scrollTop + _this.menu.offsetHeight + _this.options.tolerance\n    },\n        lowerRight = {\n      x: offset.left + document.body.scrollLeft + _this.menu.offsetWidth,\n      y: lowerLeft.y\n    },\n        loc = _this.mouseLocs[_this.mouseLocs.length - 1],\n        prevLoc = _this.mouseLocs[0];\n\n    if (!loc) {\n      return 0;\n    }\n\n    if (!prevLoc) {\n      prevLoc = loc;\n    }\n\n    if (prevLoc.x < offset.left || prevLoc.x > lowerRight.x || prevLoc.y < offset.top || prevLoc.y > lowerRight.y) {\n      return 0;\n    }\n\n    if (_this.lastDelayLoc && loc.x == _this.lastDelayLoc.x && loc.y == _this.lastDelayLoc.y) {\n      return 0;\n    }\n\n    function slope(a, b) {\n      return (b.y - a.y) / (b.x - a.x);\n    }\n\n    var decreasingCorner = upperRight,\n        increasingCorner = lowerRight;\n\n    if (_this.options.submenuDirection == "left") {\n      decreasingCorner = lowerLeft;\n      increasingCorner = upperLeft;\n    } else if (_this.options.submenuDirection == "below") {\n      decreasingCorner = lowerRight;\n      increasingCorner = lowerLeft;\n    } else if (_this.options.submenuDirection == "above") {\n      decreasingCorner = upperLeft;\n      increasingCorner = upperRight;\n    }\n\n    var decreasingSlope = slope(loc, decreasingCorner),\n        increasingSlope = slope(loc, increasingCorner),\n        prevDecreasingSlope = slope(prevLoc, decreasingCorner),\n        prevIncreasingSlope = slope(prevLoc, increasingCorner);\n\n    if (decreasingSlope < prevDecreasingSlope && increasingSlope > prevIncreasingSlope) {\n      _this.lastDelayLoc = loc;\n      return _this.DELAY;\n    }\n\n    _this.lastDelayLoc = null;\n    return 0;\n  });\n\n  _defineProperty(this, "initialiseMenuEvents", function () {\n    _this.menu.addEventListener("mouseleave", _this.mouseleaveMenu);\n\n    var rows = Array.from(_this.menu.querySelectorAll(_this.options.rowSelector));\n    rows.forEach(function (row) {\n      row.addEventListener("mouseenter", function (event) {\n        _this.mouseenterRow(row, event);\n      });\n      row.addEventListener("mouseleave", function (event) {\n        _this.mouseleaveRow(row, event);\n      });\n      row.addEventListener("click", function (event) {\n        _this.clickRow(row, event);\n      });\n    });\n    document.addEventListener("mousemove", _this.mousemoveDocument);\n  });\n\n  this.menu = el;\n  this.activeRow = null;\n  this.mouseLocs = [];\n  this.lastDelayLoc = null;\n  this.timeoutId = null;\n  this.options = _objectSpread({\n    rowSelector: "> li",\n    submenuSelector: "*",\n    submenuDirection: "right",\n    tolerance: 75,\n    enter: noop,\n    exit: noop,\n    activate: noop,\n    deactivate: noop,\n    exitMenu: noop\n  }, opts);\n  this.MOUSE_LOCS_TRACKED = 3;\n  this.DELAY = 150;\n};\n\n\n// EXTERNAL MODULE: ./src/scripts/aoLazyProximity.js\nvar aoLazyProximity = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/scripts/desktopScripts.js\n\n\n\n // import aoly from "./aoly/main";\n\nwindow.addEventListener("resize", function () {\n  var width = window.innerWidth;\n  var $mobileMenu = document.getElementById("global-megamenu__top-level-nav--mobile");\n  var visibleClass = "global-megamenu__top-level-nav--mobile-visible";\n\n  if (width >= helpers["b" /* breakpoints */].lg) {\n    if ($mobileMenu.classList.contains(visibleClass)) {\n      $mobileMenu.classList.remove(visibleClass);\n      var mainNavs = Array.from(document.querySelectorAll(".main-navigation"));\n      mainNavs.forEach(moveUnderline);\n    }\n  }\n});\nfunction menuAimInitialisation() {\n  var elements = Array.from(document.querySelectorAll(".main-navigation__main-menu-inner"));\n  var menuItemActiveClassName = "main-navigation__second-level-nav-item--sub-nav-active";\n  elements.forEach(function (element) {\n    var navZone = new MenuAim(element, {\n      activate: function activate(row) {\n        row.classList.add(menuItemActiveClassName);\n      },\n      deactivate: function deactivate(row) {\n        row.classList.remove(menuItemActiveClassName);\n      },\n      exitMenu: function exitMenu() {\n        return true;\n      },\n      tolerance: 50,\n      submenuSelector: "*",\n      rowSelector: ".main-navigation__second-level-nav-item",\n      submenuDirection: "right"\n    });\n    navZone.initialiseMenuEvents();\n  });\n}\nfunction resetSecondLevelOnMegamenuClose() {\n  var activeSubNav = document.querySelector(".main-navigation__second-level-nav-item--sub-nav-active");\n\n  if (activeSubNav) {\n    activeSubNav.classList.remove("main-navigation__second-level-nav-item--sub-nav-active");\n  }\n}\nfunction eventHandlers(mainNav, firstLevelNavItems) {\n  // event handlers\n  var htmlElement = document.documentElement;\n  var bodyElement = document.querySelector("body");\n  var megamenuOpenClass = "megamenu-open";\n  var mainNavActiveClass = "main-navigation--active";\n  var firstLevelNavItemActiveClass = "main-navigation__first-level-nav-item--active";\n  var dealsClass = "main-navigation__first-level-nav-item-inner--deals";\n  var mainNavUl = mainNav.querySelector(".main-navigation__first-level");\n  var borderColor = "border-ongreen";\n  var childTextOnGreen = "text-ongreen";\n  var childTextPrimary = "text-primary";\n  var overlay = Object(scripts_overlay["b" /* getOverlay */])();\n  var mainNavMainMenu = mainNav.querySelector(".main-navigation__main-menu");\n  var ENTER_KEY_CODE = 13;\n  var ESC_KEY_CODE = 27;\n  var megaMenuBrowseCatToggle = document.querySelector(".main-navigation__first-level-nav-item:first-of-type > .main-navigation__first-level-nav-item-inner");\n  megaMenuBrowseCatToggle.addEventListener("click", function (event) {\n    event.stopPropagation();\n    var navItem = event.target.closest(".main-navigation__first-level-nav-item");\n    navItem.classList.toggle(firstLevelNavItemActiveClass);\n    navItem.classList.toggle(borderColor);\n    navItem.children[0].classList.toggle(childTextOnGreen);\n    navItem.children[0].classList.toggle(childTextPrimary);\n    bodyElement.classList.toggle(mainNavActiveClass);\n    return;\n  });\n  document.addEventListener("click", function (event) {\n    // remove main navigation active class on interaction outside of mega menu\n    var ifNotWithinMegaMenu = !event.target.closest(".main-navigation__main-menu");\n\n    if (ifNotWithinMegaMenu) {\n      if (mainNavMainMenu.classList.contains("u-w--100")) {\n        mainNavMainMenu.classList.remove("u-w--100");\n      }\n\n      bodyElement.classList.remove(mainNavActiveClass);\n      htmlElement.classList.remove(megamenuOpenClass);\n\n      if (firstLevelNavItems) {\n        firstLevelNavItems.forEach(function (firstLevelNavItem) {\n          firstLevelNavItem.classList.remove(firstLevelNavItemActiveClass, borderColor);\n\n          if (!firstLevelNavItem.children[0].classList.contains(dealsClass)) {\n            firstLevelNavItem.children[0].classList.remove(childTextOnGreen);\n            firstLevelNavItem.children[0].classList.add(childTextPrimary);\n          }\n        });\n      }\n\n      hideUnderline(mainNav);\n    }\n  });\n  document.addEventListener("click", function (event) {\n    // dismiss submenu on click of parent nav item\n    var eventIsWithinFirstLevelNavItem = event.target.closest(".main-navigation__first-level-nav-item");\n    var eventIsWithinMainMenu = event.target.closest(".main-navigation__main-menu");\n\n    if (eventIsWithinFirstLevelNavItem && !eventIsWithinMainMenu) {\n      var eventContainsActiveClass = eventIsWithinFirstLevelNavItem.classList.contains(firstLevelNavItemActiveClass);\n\n      if (eventContainsActiveClass) {\n        bodyElement.classList.remove(mainNavActiveClass);\n        htmlElement.classList.remove(megamenuOpenClass);\n        eventIsWithinFirstLevelNavItem.classList.remove(firstLevelNavItemActiveClass, borderColor);\n\n        if (!eventIsWithinFirstLevelNavItem.children[0].classList.contains(dealsClass)) {\n          eventIsWithinFirstLevelNavItem.children[0].classList.remove(childTextOnGreen);\n          eventIsWithinFirstLevelNavItem.children[0].classList.add(childTextPrimary);\n        }\n      }\n    }\n  });\n  mainNavUl.addEventListener("mouseleave", function () {\n    hideUnderline(mainNav);\n    Object(scripts_overlay["c" /* hideOverlay */])();\n  });\n\n  if (overlay !== null) {\n    overlay.addEventListener("click", function () {\n      Object(scripts_overlay["c" /* hideOverlay */])();\n    });\n  } // first level event handlers\n\n\n  if (firstLevelNavItems) {\n    firstLevelNavItems.forEach(function (firstLevelNavItem) {\n      var itemHasDropdown = firstLevelNavItem.getAttribute("data-hasdropdown"); // handle hover events\n\n      firstLevelNavItem.addEventListener("mouseenter", function () {\n        moveUnderline(mainNav, firstLevelNavItem);\n\n        if (itemHasDropdown === "True") {\n          Object(scripts_overlay["d" /* showOverlay */])();\n        }\n\n        bodyElement.classList.add(mainNavActiveClass);\n        htmlElement.classList.add(megamenuOpenClass);\n        firstLevelNavItem.classList.add(firstLevelNavItemActiveClass, borderColor);\n\n        if (!firstLevelNavItem.children[0].classList.contains(dealsClass)) {\n          firstLevelNavItem.children[0].classList.add(childTextOnGreen);\n          firstLevelNavItem.children[0].classList.remove(childTextPrimary);\n        }\n      });\n      firstLevelNavItem.addEventListener("mouseleave", function () {\n        bodyElement.classList.remove(mainNavActiveClass);\n        htmlElement.classList.remove(megamenuOpenClass);\n        Object(scripts_overlay["c" /* hideOverlay */])();\n        hideUnderline(mainNav);\n        firstLevelNavItem.classList.remove(firstLevelNavItemActiveClass, borderColor);\n\n        if (!firstLevelNavItem.children[0].classList.contains(dealsClass)) {\n          firstLevelNavItem.children[0].classList.remove(childTextOnGreen);\n          firstLevelNavItem.children[0].classList.add(childTextPrimary);\n        }\n\n        resetSecondLevelOnMegamenuClose();\n      }); // handle touch events\n\n      firstLevelNavItem.addEventListener("click", function (event) {\n        if (event.target.classList.contains("is-inactive-megamenu-link")) {\n          event.preventDefault();\n          event.target.style.pointerEvents = "auto";\n          return;\n        }\n\n        moveUnderline(mainNav, firstLevelNavItem);\n\n        if (itemHasDropdown === "True") {\n          Object(scripts_overlay["d" /* showOverlay */])();\n        }\n      });\n\n      if (itemHasDropdown === "True") {\n        firstLevelNavItem.addEventListener("touchend", function (event) {\n          var targetNavItem = event.target.closest(".main-navigation__first-level-nav-item");\n          var navItemNotActive = !targetNavItem.classList.contains(firstLevelNavItemActiveClass);\n\n          if (navItemNotActive) {\n            event.preventDefault();\n            bodyElement.classList.add(mainNavActiveClass);\n            htmlElement.classList.add(megamenuOpenClass);\n            firstLevelNavItems.forEach(function (deepItem) {\n              deepItem.classList.remove(firstLevelNavItemActiveClass, borderColor);\n\n              if (!deepItem.children[0].classList.contains(dealsClass)) {\n                deepItem.children[0].classList.remove(childTextOnGreen);\n                deepItem.children[0].classList.add(childTextPrimary);\n              }\n\n              resetSecondLevelOnMegamenuClose();\n            });\n            targetNavItem.classList.add(firstLevelNavItemActiveClass, borderColor);\n\n            if (!targetNavItem.children[0].classList.contains(dealsClass)) {\n              targetNavItem.children[0].classList.add(childTextOnGreen);\n              targetNavItem.children[0].classList.remove(childTextPrimary);\n            }\n          }\n\n          moveUnderline(mainNav, firstLevelNavItem);\n          Object(scripts_overlay["d" /* showOverlay */])();\n        });\n      } // handle keyboard navigation\n\n\n      firstLevelNavItem.addEventListener("keydown", function (event) {\n        if (event.keyCode === ENTER_KEY_CODE) {\n          var navItemNotActive = !firstLevelNavItem.classList.contains(firstLevelNavItemActiveClass);\n\n          if (navItemNotActive) {\n            event.preventDefault();\n            bodyElement.classList.add(mainNavActiveClass);\n            htmlElement.classList.add(megamenuOpenClass);\n            firstLevelNavItems.forEach(function (deepItem) {\n              deepItem.classList.remove(firstLevelNavItemActiveClass, borderColor);\n\n              if (!deepItem.children[0].classList.contains(dealsClass)) {\n                deepItem.children[0].classList.remove(childTextOnGreen);\n                deepItem.children[0].classList.add(childTextPrimary);\n              }\n            });\n            firstLevelNavItem.classList.add(firstLevelNavItemActiveClass, borderColor);\n\n            if (!firstLevelNavItem.children[0].classList.contains(dealsClass)) {\n              firstLevelNavItem.children[0].classList.add(childTextOnGreen);\n              firstLevelNavItem.children[0].classList.remove(childTextPrimary);\n            }\n          } else {\n            var targetLink = firstLevelNavItem.querySelector(".main-navigation__first-level-nav-item-inner");\n\n            if (targetLink) {\n              var targetLinkHref = targetLink.getAttribute("href");\n\n              if (targetLinkHref) {\n                window.location = targetLinkHref;\n              }\n            }\n          }\n        }\n\n        if (event.keyCode === ESC_KEY_CODE) {\n          event.stopPropagation();\n          var navItemIsActive = firstLevelNavItem.classList.contains(firstLevelNavItemActiveClass);\n\n          if (navItemIsActive) {\n            bodyElement.classList.remove(mainNavActiveClass);\n            htmlElement.classList.remove(megamenuOpenClass);\n            firstLevelNavItem.classList.remove(firstLevelNavItemActiveClass, borderColor);\n\n            if (!firstLevelNavItem.children[0].classList.contains(dealsClass)) {\n              firstLevelNavItem.children[0].classList.remove(childTextOnGreen);\n              firstLevelNavItem.children[0].classList.add(childTextPrimary);\n            }\n\n            firstLevelNavItem.focus();\n          }\n        }\n      });\n    });\n  } // second level event handlers\n\n\n  var secondLevelNavItemLinks = Array.from(mainNav.querySelectorAll(".main-navigation__second-level-nav-item-link"));\n  var secondLevelSubNavActiveClass = "main-navigation__second-level-nav-item--sub-nav-active";\n  var touchedClass = "main-navigation__second-level-nav-item-link--touched";\n\n  if (secondLevelNavItemLinks) {\n    secondLevelNavItemLinks.forEach(function (secondLevelNavItemLink) {\n      // handle hover events\n      secondLevelNavItemLink.addEventListener("mouseenter", function () {\n        if (!mainNavMainMenu.classList.contains("u-w--100")) {\n          mainNavMainMenu.classList.add("u-w--100");\n        }\n      }); // handle touch events\n\n      secondLevelNavItemLink.addEventListener("touchend", function (event) {\n        if (!secondLevelNavItemLink.parentNode.classList.contains(secondLevelSubNavActiveClass) && !secondLevelNavItemLink.classList.contains(touchedClass)) {\n          event.preventDefault();\n          secondLevelNavItemLinks.forEach(function (deepLink) {\n            deepLink.parentNode.classList.remove(secondLevelSubNavActiveClass);\n            deepLink.classList.remove(touchedClass);\n          });\n          secondLevelNavItemLink.parentNode.classList.add(secondLevelSubNavActiveClass);\n          secondLevelNavItemLink.classList.add(touchedClass);\n\n          if (!mainNavMainMenu.classList.contains("u-w--100")) {\n            mainNavMainMenu.classList.add("u-w--100");\n          }\n        }\n      }); // handle keyboard navigation\n\n      secondLevelNavItemLink.addEventListener("keydown", function (event) {\n        if (event.keyCode === ENTER_KEY_CODE) {\n          if (!secondLevelNavItemLink.parentNode.classList.contains(secondLevelSubNavActiveClass) && !secondLevelNavItemLink.classList.contains(touchedClass)) {\n            event.preventDefault();\n            secondLevelNavItemLinks.forEach(function (deepLink) {\n              deepLink.parentNode.classList.remove(secondLevelSubNavActiveClass);\n              deepLink.classList.remove(touchedClass);\n            });\n            secondLevelNavItemLink.parentNode.classList.add(secondLevelSubNavActiveClass);\n            secondLevelNavItemLink.classList.add(touchedClass);\n\n            if (!mainNavMainMenu.classList.contains("u-w--100")) {\n              mainNavMainMenu.classList.add("u-w--100");\n            }\n          }\n        }\n\n        if (event.keyCode === ESC_KEY_CODE) {\n          if (secondLevelNavItemLink.parentNode.classList.contains(secondLevelSubNavActiveClass) && secondLevelNavItemLink.classList.contains(touchedClass)) {\n            event.stopPropagation();\n            secondLevelNavItemLink.parentNode.classList.remove(secondLevelSubNavActiveClass);\n            secondLevelNavItemLink.classList.remove(touchedClass);\n            secondLevelNavItemLink.focus();\n\n            if (mainNavMainMenu.classList.contains("u-w--100")) {\n              mainNavMainMenu.classList.remove("u-w--100");\n            }\n          }\n        }\n      });\n    });\n  } // sub navigation event handlers\n\n\n  var subNavLinks = Array.from(mainNav.querySelectorAll(".main-navigation__sub-navigation a"));\n\n  if (subNavLinks) {\n    subNavLinks.forEach(function (subNavLink) {\n      // handle keyboard navigation\n      subNavLink.addEventListener("keydown", function (event) {\n        if (event.keyCode === ESC_KEY_CODE) {\n          secondLevelNavItemLinks.forEach(function (secondLevelNavItemLink) {\n            if (secondLevelNavItemLink.parentNode.classList.contains(secondLevelSubNavActiveClass) && secondLevelNavItemLink.classList.contains(touchedClass)) {\n              event.stopPropagation();\n              secondLevelNavItemLink.parentNode.classList.remove(secondLevelSubNavActiveClass);\n              secondLevelNavItemLink.classList.remove(touchedClass);\n              secondLevelNavItemLink.focus();\n\n              if (mainNavMainMenu.classList.contains("u-w--100")) {\n                mainNavMainMenu.classList.remove("u-w--100");\n              }\n            }\n          });\n        }\n      });\n    });\n  }\n} //MM Variant testing Scripts Start\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    "use strict";\n\n    if (typeof start !== "number") {\n      start = 0;\n    }\n\n    if (start + search.length > this.length) {\n      return false;\n    } else {\n      return this.indexOf(search, start) !== -1;\n    }\n  };\n} //MM Variant testing Scripts End\n\n\nfunction desktopScripts() {\n  Object(aoLazyProximity["a" /* initLazyProximity */])();\n  window.addEventListener("lazyloadcomplete", function (evt) {\n    var lazyImage = evt.target;\n    lazyImage.classList.add("img-loaded");\n  });\n  var mainNavs = Array.from(document.querySelectorAll(".main-navigation"));\n  var firstLevelNavItems;\n  mainNavs.forEach(function (mainNav) {\n    if (mainNav) {\n      firstLevelNavItems = Array.from(mainNav.querySelectorAll(".main-navigation__first-level-nav-item")); //Close Desktop menu when switching between desktop and mobile views\n\n      window.addEventListener("DOMContentLoaded", function () {\n        if (window.breakpoint && Object(helpers["d" /* isTouchDevice */])()) {\n          window.addEventListener("breakpointChanged", function (evt) {\n            if ((evt.previousBreakpoint === "desktop" || evt.previousBreakpoint === "tablet") && evt.breakpoint === "mobile" && document.body.classList.contains("main-navigation--active")) {\n              document.body.classList.remove("main-navigation--active");\n              hideUnderline(mainNav);\n              Object(scripts_overlay["c" /* hideOverlay */])();\n            }\n          });\n        }\n      });\n      menuAimInitialisation();\n      eventHandlers(mainNav, firstLevelNavItems);\n    }\n  });\n}\n\nfunction moveUnderline(mainNav, item) {\n  var firstLevelNavItemUnderline = mainNav.querySelector(".main-navigation__underline");\n\n  if (item.querySelector(".main-navigation__first-level-nav-item-inner--deals")) {\n    if (firstLevelNavItemUnderline.classList.contains("bg-ongreen")) {\n      firstLevelNavItemUnderline.classList.remove("bg-ongreen");\n    }\n\n    firstLevelNavItemUnderline.classList.add("bg-deals");\n  } else {\n    if (firstLevelNavItemUnderline.classList.contains("bg-deals")) {\n      firstLevelNavItemUnderline.classList.remove("bg-deals");\n    }\n\n    firstLevelNavItemUnderline.classList.add("bg-ongreen");\n  }\n\n  var itemRect = item.getBoundingClientRect();\n  var itemStyle = getComputedStyle(item.querySelector(".main-navigation__first-level-nav-item-inner"));\n  firstLevelNavItemUnderline.style.left = "".concat(itemRect.left + parseFloat(itemStyle.paddingLeft), "px");\n  firstLevelNavItemUnderline.style.width = "".concat(itemRect.width - parseFloat(itemStyle.paddingLeft) - parseFloat(itemStyle.paddingRight), "px");\n}\n\nfunction hideUnderline(mainNav) {\n  var firstLevelNavItemUnderline = mainNav.querySelector(".main-navigation__underline");\n  firstLevelNavItemUnderline.classList.remove("bg-deals");\n  firstLevelNavItemUnderline.classList.add("bg-ongreen");\n  firstLevelNavItemUnderline.style.left = "";\n  firstLevelNavItemUnderline.style.width = "";\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n')},function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHR2YXIgbW9kdWxlID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbE1vZHVsZSk7XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiZXhwb3J0c1wiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n')},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vYW1kLW9wdGlvbnMuanM/MDA4NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwiZmlsZSI6IjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fd2VicGFja19hbWRfb3B0aW9uc19fICovXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19hbWRfb3B0aW9uc19fO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGVlcG1lcmdlL2Rpc3QvY2pzLmpzPzNjNGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxJQUFJO0FBQ047O0FBRUE7O0FBRUEiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGlzTWVyZ2VhYmxlT2JqZWN0ID0gZnVuY3Rpb24gaXNNZXJnZWFibGVPYmplY3QodmFsdWUpIHtcblx0cmV0dXJuIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSlcblx0XHQmJiAhaXNTcGVjaWFsKHZhbHVlKVxufTtcblxuZnVuY3Rpb24gaXNOb25OdWxsT2JqZWN0KHZhbHVlKSB7XG5cdHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCdcbn1cblxuZnVuY3Rpb24gaXNTcGVjaWFsKHZhbHVlKSB7XG5cdHZhciBzdHJpbmdWYWx1ZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG5cblx0cmV0dXJuIHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBSZWdFeHBdJ1xuXHRcdHx8IHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBEYXRlXSdcblx0XHR8fCBpc1JlYWN0RWxlbWVudCh2YWx1ZSlcbn1cblxuLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I1YWM5NjNmYjc5MWQxMjk4ZTdmMzk2MjM2MzgzYmM5NTVmOTE2YzEvc3JjL2lzb21vcnBoaWMvY2xhc3NpYy9lbGVtZW50L1JlYWN0RWxlbWVudC5qcyNMMjEtTDI1XG52YXIgY2FuVXNlU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yO1xudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IGNhblVzZVN5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSA6IDB4ZWFjNztcblxuZnVuY3Rpb24gaXNSZWFjdEVsZW1lbnQodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlLiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEVcbn1cblxuZnVuY3Rpb24gZW1wdHlUYXJnZXQodmFsKSB7XG5cdHJldHVybiBBcnJheS5pc0FycmF5KHZhbCkgPyBbXSA6IHt9XG59XG5cbmZ1bmN0aW9uIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHZhbHVlLCBvcHRpb25zKSB7XG5cdHJldHVybiAob3B0aW9ucy5jbG9uZSAhPT0gZmFsc2UgJiYgb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCh2YWx1ZSkpXG5cdFx0PyBkZWVwbWVyZ2UoZW1wdHlUYXJnZXQodmFsdWUpLCB2YWx1ZSwgb3B0aW9ucylcblx0XHQ6IHZhbHVlXG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRBcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdHJldHVybiB0YXJnZXQuY29uY2F0KHNvdXJjZSkubWFwKGZ1bmN0aW9uKGVsZW1lbnQpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoZWxlbWVudCwgb3B0aW9ucylcblx0fSlcbn1cblxuZnVuY3Rpb24gZ2V0TWVyZ2VGdW5jdGlvbihrZXksIG9wdGlvbnMpIHtcblx0aWYgKCFvcHRpb25zLmN1c3RvbU1lcmdlKSB7XG5cdFx0cmV0dXJuIGRlZXBtZXJnZVxuXHR9XG5cdHZhciBjdXN0b21NZXJnZSA9IG9wdGlvbnMuY3VzdG9tTWVyZ2Uoa2V5KTtcblx0cmV0dXJuIHR5cGVvZiBjdXN0b21NZXJnZSA9PT0gJ2Z1bmN0aW9uJyA/IGN1c3RvbU1lcmdlIDogZGVlcG1lcmdlXG59XG5cbmZ1bmN0aW9uIGdldEVudW1lcmFibGVPd25Qcm9wZXJ0eVN5bWJvbHModGFyZ2V0KSB7XG5cdHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzXG5cdFx0PyBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkuZmlsdGVyKGZ1bmN0aW9uKHN5bWJvbCkge1xuXHRcdFx0cmV0dXJuIHRhcmdldC5wcm9wZXJ0eUlzRW51bWVyYWJsZShzeW1ib2wpXG5cdFx0fSlcblx0XHQ6IFtdXG59XG5cbmZ1bmN0aW9uIGdldEtleXModGFyZ2V0KSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyh0YXJnZXQpLmNvbmNhdChnZXRFbnVtZXJhYmxlT3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkpXG59XG5cbmZ1bmN0aW9uIHByb3BlcnR5SXNPbk9iamVjdChvYmplY3QsIHByb3BlcnR5KSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHByb3BlcnR5IGluIG9iamVjdFxuXHR9IGNhdGNoKF8pIHtcblx0XHRyZXR1cm4gZmFsc2Vcblx0fVxufVxuXG4vLyBQcm90ZWN0cyBmcm9tIHByb3RvdHlwZSBwb2lzb25pbmcgYW5kIHVuZXhwZWN0ZWQgbWVyZ2luZyB1cCB0aGUgcHJvdG90eXBlIGNoYWluLlxuZnVuY3Rpb24gcHJvcGVydHlJc1Vuc2FmZSh0YXJnZXQsIGtleSkge1xuXHRyZXR1cm4gcHJvcGVydHlJc09uT2JqZWN0KHRhcmdldCwga2V5KSAvLyBQcm9wZXJ0aWVzIGFyZSBzYWZlIHRvIG1lcmdlIGlmIHRoZXkgZG9uJ3QgZXhpc3QgaW4gdGhlIHRhcmdldCB5ZXQsXG5cdFx0JiYgIShPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIGtleSkgLy8gdW5zYWZlIGlmIHRoZXkgZXhpc3QgdXAgdGhlIHByb3RvdHlwZSBjaGFpbixcblx0XHRcdCYmIE9iamVjdC5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHRhcmdldCwga2V5KSkgLy8gYW5kIGFsc28gdW5zYWZlIGlmIHRoZXkncmUgbm9uZW51bWVyYWJsZS5cbn1cblxuZnVuY3Rpb24gbWVyZ2VPYmplY3QodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcblx0dmFyIGRlc3RpbmF0aW9uID0ge307XG5cdGlmIChvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0KHRhcmdldCkpIHtcblx0XHRnZXRLZXlzKHRhcmdldCkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcblx0XHRcdGRlc3RpbmF0aW9uW2tleV0gPSBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCh0YXJnZXRba2V5XSwgb3B0aW9ucyk7XG5cdFx0fSk7XG5cdH1cblx0Z2V0S2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG5cdFx0aWYgKHByb3BlcnR5SXNVbnNhZmUodGFyZ2V0LCBrZXkpKSB7XG5cdFx0XHRyZXR1cm5cblx0XHR9XG5cblx0XHRpZiAocHJvcGVydHlJc09uT2JqZWN0KHRhcmdldCwga2V5KSAmJiBvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGdldE1lcmdlRnVuY3Rpb24oa2V5LCBvcHRpb25zKSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0sIG9wdGlvbnMpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoc291cmNlW2tleV0sIG9wdGlvbnMpO1xuXHRcdH1cblx0fSk7XG5cdHJldHVybiBkZXN0aW5hdGlvblxufVxuXG5mdW5jdGlvbiBkZWVwbWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cdG9wdGlvbnMuYXJyYXlNZXJnZSA9IG9wdGlvbnMuYXJyYXlNZXJnZSB8fCBkZWZhdWx0QXJyYXlNZXJnZTtcblx0b3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCA9IG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QgfHwgaXNNZXJnZWFibGVPYmplY3Q7XG5cdC8vIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkIGlzIGFkZGVkIHRvIGBvcHRpb25zYCBzbyB0aGF0IGN1c3RvbSBhcnJheU1lcmdlKClcblx0Ly8gaW1wbGVtZW50YXRpb25zIGNhbiB1c2UgaXQuIFRoZSBjYWxsZXIgbWF5IG5vdCByZXBsYWNlIGl0LlxuXHRvcHRpb25zLmNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkID0gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQ7XG5cblx0dmFyIHNvdXJjZUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KHNvdXJjZSk7XG5cdHZhciB0YXJnZXRJc0FycmF5ID0gQXJyYXkuaXNBcnJheSh0YXJnZXQpO1xuXHR2YXIgc291cmNlQW5kVGFyZ2V0VHlwZXNNYXRjaCA9IHNvdXJjZUlzQXJyYXkgPT09IHRhcmdldElzQXJyYXk7XG5cblx0aWYgKCFzb3VyY2VBbmRUYXJnZXRUeXBlc01hdGNoKSB7XG5cdFx0cmV0dXJuIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHNvdXJjZSwgb3B0aW9ucylcblx0fSBlbHNlIGlmIChzb3VyY2VJc0FycmF5KSB7XG5cdFx0cmV0dXJuIG9wdGlvbnMuYXJyYXlNZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucylcblx0fSBlbHNlIHtcblx0XHRyZXR1cm4gbWVyZ2VPYmplY3QodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpXG5cdH1cbn1cblxuZGVlcG1lcmdlLmFsbCA9IGZ1bmN0aW9uIGRlZXBtZXJnZUFsbChhcnJheSwgb3B0aW9ucykge1xuXHRpZiAoIUFycmF5LmlzQXJyYXkoYXJyYXkpKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdmaXJzdCBhcmd1bWVudCBzaG91bGQgYmUgYW4gYXJyYXknKVxuXHR9XG5cblx0cmV0dXJuIGFycmF5LnJlZHVjZShmdW5jdGlvbihwcmV2LCBuZXh0KSB7XG5cdFx0cmV0dXJuIGRlZXBtZXJnZShwcmV2LCBuZXh0LCBvcHRpb25zKVxuXHR9LCB7fSlcbn07XG5cbnZhciBkZWVwbWVyZ2VfMSA9IGRlZXBtZXJnZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWVwbWVyZ2VfMTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///8\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9pbmRleC5zY3NzP2ZkMmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n")},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/scss/index.scss\nvar scss = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./src/scripts/helpers.js\nvar helpers = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./src/scripts/mobileMegaMenu.js\nvar mobileMegaMenu = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./src/scripts/overlay.js\nvar overlay = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./src/scripts/desktopScripts.js + 1 modules\nvar desktopScripts = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/scripts/deferImageLoad.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar DEFER_SRC_ATTR = 'data-defer-src';\n\nvar deferImageLoad = function deferImageLoad() {\n  document.addEventListener('DOMContentLoaded', function () {\n    var imageElements = document.querySelectorAll(\"[\".concat(DEFER_SRC_ATTR, \"]\"));\n\n    var _iterator = _createForOfIteratorHelper(imageElements),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var imageElement = _step.value;\n        var src = imageElement.getAttribute(DEFER_SRC_ATTR);\n        imageElement.setAttribute('src', src);\n        imageElement.removeAttribute(DEFER_SRC_ATTR);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  });\n};\n\n/* harmony default export */ var scripts_deferImageLoad = (deferImageLoad);\n// EXTERNAL MODULE: ./src/scripts/polyfills.js\nvar polyfills = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/deepmerge/dist/cjs.js\nvar cjs = __webpack_require__(8);\nvar cjs_default = /*#__PURE__*/__webpack_require__.n(cjs);\n\n// CONCATENATED MODULE: ./node_modules/@ao-internal/digital-data/dist/digitaldataproxy.esm.js\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar CUSTOM_EVENT_QUERY_SELECTOR = 'body';\nvar TRACKING_EVENTS_ADDED = 'digitaldata-trackingeventsadded';\nvar DIGITAL_DATA_MUTATED = 'digitaldata-digitaldatamutated';\nvar SEND_BEACON = 'digitaldata-sendbeacon';\nvar TRACK_VIRTUAL_PAGEVIEW = 'TrackVirtualPageview';\n\nfunction dispatchTrackingEvent(type, detail) {\n  var event = new CustomEvent(type, {\n    detail: detail\n  });\n  var el = document.querySelector(CUSTOM_EVENT_QUERY_SELECTOR);\n\n  if (el) {\n    el.dispatchEvent(event);\n  }\n}\n\nvar overwriteMerge = function overwriteMerge(_destinationArray, sourceArray, _options) {\n  return sourceArray;\n};\n\nfunction manipulateDigitalData(payload, options) {\n  if (options === void 0) {\n    options = {\n      overwrite: false\n    };\n  }\n\n  var eventPayload = null;\n\n  if (typeof payload === 'function') {\n    payload(window.digitalData || {});\n  } else {\n    var original = window.digitalData || {};\n    var mergeOptions = {};\n\n    if (options.overwrite) {\n      mergeOptions.arrayMerge = overwriteMerge;\n    }\n\n    window.digitalData = cjs_default()(original, payload, mergeOptions);\n    eventPayload = payload;\n  }\n\n  dispatchTrackingEvent(DIGITAL_DATA_MUTATED, eventPayload);\n}\nfunction sendBeacon(eventName, data) {\n  if (typeof eventName === 'object') {\n    //eslint-disable-next-line no-process-env, no-undef\n    if (false) {}\n\n    data = eventName.data;\n    eventName = eventName.eventName;\n  }\n\n  try {\n    if (typeof data === 'function') {\n      data = data();\n    }\n\n    dispatchTrackingEvent(eventName, data || null);\n    dispatchTrackingEvent(SEND_BEACON, {\n      eventName: eventName\n    });\n  } catch (e) {\n    // \"finally\" keyword does not capture certain execptions on IE11, better to use catch\n    //this is capture any errors on the logging\n    // eslint-disable-next-line no-console\n    console.warn(e);\n  }\n}\nfunction trackVirtualPageview(url, title) {\n  try {\n    url = typeof url !== 'string' ? location.pathname : url;\n    title = typeof title !== 'string' ? document.title : title;\n    sendBeacon(TRACK_VIRTUAL_PAGEVIEW, {\n      url: url,\n      title: title\n    });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(e);\n  }\n}\nfunction appendDigitalDataEvents(events) {\n  var eventObjects = events.map(function (_ref) {\n    var type = _ref.type,\n        eventName = _ref.eventName,\n        payload = _objectWithoutPropertiesLoose(_ref, [\"type\", \"eventName\"]);\n\n    return {\n      payload: payload,\n      eventName: eventName,\n      type: type\n    };\n  });\n  var digitalDataEvents = window.digitalData.event || [];\n  window.digitalData = _extends({}, window.digitalData, {\n    event: [].concat(digitalDataEvents, eventObjects)\n  });\n  dispatchTrackingEvent(TRACKING_EVENTS_ADDED, {\n    events: events\n  });\n}\n\nvar CLICK_EVENT_NAME = 'TrackClick';\nvar VALUE_SELECTION_EVENT_NAME = 'TrackValueSelection';\nvar FORM_SUBMISSION_EVENT_NAME = 'TrackFormSubmission';\nvar SCROLL_EVENT_NAME = 'TrackScroll'; //eslint-disable-next-line no-process-env, no-undef\n\nif (false) {}\n\nfunction getTagAttributes(el) {\n  if (!el) {\n    return [];\n  }\n\n  var consideredAttributes = ['id', 'name'];\n  var attributeNames = typeof el.getAttributeNames === 'function' ? el.getAttributeNames() : Array.from(el.attributes, function (n) {\n    return n.name;\n  });\n  return attributeNames.filter( // take all data-tag-* attributes and the considered attributes IF a matching data-tag-* does not exist\n  function (i) {\n    return i.indexOf('data-tag-') > -1 || consideredAttributes.indexOf(i) > -1 && attributeNames.indexOf(\"data-tag-\" + i) === -1;\n  }).map(function (attribute) {\n    return {\n      name: attribute.indexOf('data-tag-') > -1 ? attribute.substr(9) : attribute,\n      value: el.getAttribute(attribute) || ''\n    };\n  });\n}\n\nfunction getLabelControl(element) {\n  if (element.control) {\n    return element.control;\n  } // IE doesn't return the wrapped contol element\n\n\n  return element.querySelector('input,textarea');\n}\n\nvar parentOverrideAttributes = ['type'];\nfunction getTagContext(el) {\n  var context = {};\n\n  if (!el) {\n    return context;\n  } // image, button, text link, video\n\n\n  switch (el.tagName.toUpperCase()) {\n    case 'IMG':\n    case 'PICTURE':\n    case 'SVG':\n      context.type = 'image';\n      break;\n\n    case 'VIDEO':\n      context.type = 'video';\n      break;\n\n    case 'BUTTON':\n      context.type = 'button';\n      break;\n\n    case 'FORM':\n      context.type = 'form';\n      break;\n\n    case 'A':\n      context.type = 'link';\n      var sendLinkText = el.hasAttribute('data-send-linktext');\n\n      if (sendLinkText) {\n        var _el$textContent;\n\n        var linkText = (_el$textContent = el.textContent) == null ? void 0 : _el$textContent.trim();\n        context.linkText = linkText ? linkText : null;\n      }\n\n      break;\n\n    case 'LABEL':\n      context.type = 'label';\n      var labelInputElement = getLabelControl(el);\n\n      if (labelInputElement) {\n        if ('value' in labelInputElement) {\n          context.hasValue = labelInputElement.value ? true : false;\n        }\n\n        if (labelInputElement.id) {\n          context.labelFor = labelInputElement.id;\n        }\n      }\n\n      break;\n\n    case 'SELECT':\n      context.type = 'select';\n      var selectElement = el;\n\n      if (selectElement.selectedOptions) {\n        context.value = Array.from(selectElement.selectedOptions, function (option) {\n          return option.value;\n        });\n      } else if (selectElement.type === 'select-multiple') {\n        context.value = Array.from(selectElement.selectedOptions, function (_ref) {\n          var selected = _ref.selected,\n              value = _ref.value;\n          return {\n            selected: selected,\n            value: value\n          };\n        }).filter(function (option) {\n          return option.selected;\n        }).map(function (option) {\n          return option.value;\n        });\n      } else if (selectElement.selectedIndex > -1) {\n        context.value = [selectElement.options[selectElement.selectedIndex].value];\n      }\n\n      if (Array.isArray(context.value) && context.value.length === 1) {\n        context.value = context.value[0];\n      }\n\n      break;\n\n    case 'TEXTAREA':\n    case 'INPUT':\n      var input = el;\n\n      switch (input.type) {\n        case 'button':\n        case 'submit':\n          context.type = 'button';\n          break;\n\n        case 'image':\n          context.type = 'image';\n          break;\n\n        case 'radio':\n          context.type = 'radio';\n          context.value = input.value;\n          break;\n\n        case 'checkbox':\n          context.type = 'checkbox';\n          context.value = input.checked ? input.getAttribute('value') || true : false;\n          break;\n\n        default:\n          context.type = 'input';\n          context.private = true;\n          context.hasValue = input.value ? true : false;\n          break;\n      }\n\n      break;\n\n    default:\n      context.type = 'element';\n      break;\n  }\n\n  var candidate = el;\n\n  while (candidate && candidate !== document.documentElement) {\n    var tagAttributes = getTagAttributes(candidate);\n    tagAttributes.forEach(function (_ref2) {\n      var name = _ref2.name,\n          value = _ref2.value;\n\n      if (parentOverrideAttributes.indexOf(name) > -1 || !context.hasOwnProperty(name)) {\n        context[name] = value;\n      }\n    });\n    candidate = candidate.parentElement;\n  }\n\n  if (context.hasOwnProperty('private') && context.hasOwnProperty('value')) {\n    delete context.value;\n    context.hasValue = true;\n  }\n\n  return context;\n}\n\nfunction isDebugMode() {\n  return (//eslint-disable-next-line no-process-env, no-undef\n    // process.env.NODE_ENV !== 'production' &&\n    window.debugCaptureGlobalEvents === true\n  );\n}\n\nfunction checkContextProperties(target, context, eventName, expectedProperties) {\n  if (isDebugMode()) {\n    var warnings = [];\n    expectedProperties.forEach(function (prop) {\n      if (!context.hasOwnProperty(prop)) {\n        warnings.push(prop + \": missing in context\");\n      }\n    });\n\n    if (warnings.length) {\n      //eslint-disable-next-line no-console\n      console.warn(eventName + \" WARNINGS: \" + target + \"\\n  \" + warnings.join('\\n  ') + \"\\n\" + JSON.stringify(context, null, 2));\n    }\n  }\n}\n\nfunction dispatchContext(eventName, context) {\n  var contextKeys = Object.keys(context).filter(function (key) {\n    return key !== 'type';\n  });\n\n  if (contextKeys.length > 0) {\n    sendBeacon(eventName, context);\n\n    if (isDebugMode()) {\n      /*eslint-disable no-console */\n      console.info('\\x1b[92m%s\\x1b[0m', \"\\u2714 Tracking beacon sent! Using event name '\" + eventName + \"' and the following details object:\\n\" + JSON.stringify(context, null, 2));\n      /*eslint-enable */\n    }\n  }\n}\n\nfunction processClick(target, context) {\n  checkContextProperties(target, context, CLICK_EVENT_NAME, ['name', 'section']);\n  dispatchContext(CLICK_EVENT_NAME, context);\n}\n\nfunction processValueSelect(target, context) {\n  checkContextProperties(target, context, VALUE_SELECTION_EVENT_NAME, ['name', 'section']);\n  dispatchContext(VALUE_SELECTION_EVENT_NAME, context);\n}\n\nfunction processFormSubmission(target, context) {\n  checkContextProperties(target, context, FORM_SUBMISSION_EVENT_NAME, ['name', 'section']);\n  dispatchContext(FORM_SUBMISSION_EVENT_NAME, context);\n}\n\nfunction processScroll(context) {\n  dispatchContext(SCROLL_EVENT_NAME, context);\n}\n\nvar focusoutElements =\n/*#__PURE__*/\nnew Set(['SELECT', 'INPUT', 'TEXTAREA']);\nvar changedElements =\n/*#__PURE__*/\nnew Set();\n\nfunction changedHandler(event) {\n  var eventTarget = event.target;\n  var tagName = eventTarget.tagName.toUpperCase();\n\n  if (focusoutElements.has(tagName)) {\n    changedElements.add(eventTarget);\n  }\n}\n\nfunction navigationHandler() {\n  Array.from(changedElements).forEach(function (element) {\n    var context = getTagContext(element);\n    processValueSelect(element, context);\n  });\n  changedElements.clear();\n}\n\nvar scrollContext = {\n  type: 'scroll',\n  name: 'page scroll',\n  section: 'document',\n  percent: ''\n};\nvar scrollPositions = {\n  moreThan25: false,\n  moreThan50: false,\n  moreThan75: false,\n  moreThan90: false\n};\n\nfunction scrollHandler() {\n  function getPercentageScrolled() {\n    var windowHeight = window.innerHeight || (document.documentElement || document.body).clientHeight;\n    var docheight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n    var scrollTop = window.pageYOffset || (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    var trackLength = docheight - windowHeight;\n    return Math.round(scrollTop / trackLength * 100);\n  }\n\n  var scrollPercent = getPercentageScrolled();\n\n  if (scrollPercent === 25 && !scrollPositions.moreThan25) {\n    scrollPositions.moreThan25 = true;\n    scrollContext = _extends({}, scrollContext, {\n      percent: '25%'\n    });\n    processScroll(scrollContext);\n  } else if (scrollPercent === 50 && !scrollPositions.moreThan50) {\n    scrollPositions.moreThan50 = true;\n    scrollContext.percent = '50%';\n    processScroll(scrollContext);\n  } else if (scrollPercent === 75 && !scrollPositions.moreThan75) {\n    scrollPositions.moreThan75 = true;\n    scrollContext.percent = '75%';\n    processScroll(scrollContext);\n  } else if (scrollPercent === 90 && !scrollPositions.moreThan90) {\n    scrollPositions.moreThan90 = true;\n    scrollContext.percent = '90%';\n    processScroll(scrollContext);\n  }\n}\n\nfunction globalEventHandler(event) {\n  var eventType = event.type;\n  var eventTarget = event.target;\n  var tagName = eventTarget.tagName.toUpperCase();\n  var context = getTagContext(eventTarget);\n  var isFocusoutElement = focusoutElements.has(tagName);\n  var isTargetDisabled = null;\n  if (event.type === 'focusout' && !isFocusoutElement) return;\n\n  switch (context.type) {\n    case 'label':\n      var input = getLabelControl(eventTarget);\n      var inputFromFor = context.labelFor ? document.getElementById(context.labelFor) : null;\n      var eventTargetFromLabelFor = input || inputFromFor;\n      if (!eventTargetFromLabelFor) return;\n      isTargetDisabled = eventTargetFromLabelFor.disabled;\n      if (isTargetDisabled) return;\n      var contextFromLabelFor = getTagContext(eventTargetFromLabelFor);\n      var isTargetSelectableViaLabel = contextFromLabelFor.type === 'radio' || contextFromLabelFor.type === 'checkbox';\n\n      if (isTargetSelectableViaLabel && eventType === 'click') {\n        processClick(eventTarget, context);\n      }\n\n      if (eventTargetFromLabelFor && isTargetSelectableViaLabel) {\n        changedElements.delete(eventTargetFromLabelFor);\n        processValueSelect(eventTargetFromLabelFor, contextFromLabelFor);\n      }\n\n      break;\n\n    case 'input':\n      isTargetDisabled = eventTarget.disabled;\n      if (isTargetDisabled) return;\n\n      if (eventType === 'focusout' && isFocusoutElement && changedElements.has(eventTarget) || eventType === 'click' && !isFocusoutElement) {\n        changedElements.delete(eventTarget);\n        processValueSelect(eventTarget, context);\n      }\n\n      break;\n\n    case 'form':\n      if (eventType === 'submit') {\n        processFormSubmission(eventTarget, context);\n      }\n\n      break;\n    // select, radio, checkbox\n\n    case 'select':\n    case 'radio':\n    case 'checkbox':\n      isTargetDisabled = eventTarget.disabled;\n      if (isTargetDisabled) return;\n\n      if (eventType === 'click') {\n        processClick(eventTarget, context);\n      }\n\n      if (eventType === 'focusout' && isFocusoutElement && changedElements.has(eventTarget) || eventType === 'click' && !isFocusoutElement) {\n        changedElements.delete(eventTarget);\n        processValueSelect(eventTarget, context);\n      }\n\n      break;\n\n    default:\n      processClick(eventTarget, context);\n      break;\n  }\n}\n\nif (typeof window.trackingRoots === 'undefined') {\n  window.trackingRoots =\n  /*#__PURE__*/\n  new Map();\n}\n\nfunction captureGlobalEvents(root) {\n  var roots = Array.from(window.trackingRoots);\n\n  for (var i = 0; i < roots.length; i++) {\n    var _roots$i = roots[i],\n        trackedRoot = _roots$i[0],\n        _cleanup = _roots$i[1];\n\n    if (trackedRoot.contains(root) || trackedRoot === root) {\n      return function () {};\n    }\n\n    if (root.contains(trackedRoot)) {\n      _cleanup();\n\n      window.trackingRoots.delete(root);\n    }\n  }\n\n  root.addEventListener('click', globalEventHandler); // use \"focusout\" for accessibility and to prevent \"change\" spamming\n\n  root.addEventListener('focusout', globalEventHandler);\n  root.addEventListener('change', changedHandler);\n  root.addEventListener('submit', globalEventHandler);\n  window.addEventListener('hashchange', navigationHandler);\n  window.addEventListener('pagehide', navigationHandler);\n  window.addEventListener('popstate', navigationHandler);\n  document.addEventListener('scroll', scrollHandler);\n  window.addEventListener('resize', scrollHandler);\n\n  var cleanup = function cleanup() {\n    root.removeEventListener('click', globalEventHandler);\n    root.removeEventListener('focusout', globalEventHandler);\n    root.removeEventListener('change', changedHandler);\n    root.removeEventListener('submit', globalEventHandler);\n    window.removeEventListener('hashchange', navigationHandler);\n    window.removeEventListener('pagehide', navigationHandler);\n    window.removeEventListener('popstate', navigationHandler);\n    document.removeEventListener('scroll', scrollHandler);\n    window.removeEventListener('resize', scrollHandler);\n  };\n\n  window.trackingRoots.set(root, cleanup);\n  return cleanup;\n}\n\nvar digitalDataMiddleWare = function digitalDataMiddleWare(sideEffect) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        if (!sideEffect) return next(action);\n        var state = store.getState();\n        var keys = Object.keys(sideEffect);\n        keys.forEach(function (key) {\n          sideEffect[key](state, action);\n        });\n        return next(action);\n      };\n    };\n  };\n};\n\n/* istanbul ignore file */\nvar VERSION = \"0.6.21\";\n\n\n//# sourceMappingURL=digitaldataproxy.esm.js.map\n\n// CONCATENATED MODULE: ./src/scripts/index.js\n\n\n\n\n\n\n\n\nObject(polyfills[\"a\" /* polyfills */])();\n\nvar mobileAoMegaMenuFeatSwitch = function mobileAoMegaMenuFeatSwitch() {\n  //adding Window global to be able to use as featSwitch on other megaMenu Scripts\n  window.enableSelfServeMegaMenu = true;\n};\n\nmobileAoMegaMenuFeatSwitch();\n\nif (Object(helpers[\"d\" /* isTouchDevice */])()) {\n  Object(helpers[\"e\" /* removeFocusState */])();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  //Fixes issue with Checkout overlay clickability\n  var overlayElement = document.querySelector(\".mobileMenuOpenOverlay\");\n\n  if (overlayElement) {\n    overlayElement.addEventListener(\"click\", function () {});\n  }\n});\n/**\n * When dom content loaded apply an event for tracking click events\n */\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  captureGlobalEvents(document.body);\n});\nObject(overlay[\"a\" /* addOverlay */])();\nObject(mobileMegaMenu[\"a\" /* mobileMegaMenu */])(mobileMegaMenu[\"c\" /* setupHeaderBtn */], mobileMegaMenu[\"b\" /* setupBackBtns */], helpers[\"c\" /* getHeaderBtn */]);\nObject(desktopScripts[\"a\" /* desktopScripts */])();\nscripts_deferImageLoad();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n")}]);